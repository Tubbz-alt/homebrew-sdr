From 6c72554e43c8bc1e35d8baa7a8271772c85fa48e Mon Sep 17 00:00:00 2001
From: "A. Maitland Bottoms" <bottoms@debian.org>
Date: Sat, 10 Feb 2018 20:40:35 -0500
Subject: [PATCH 11/27] gr-vocoder codec2 subcomponent using external codec2

Newer distributions use newer Codec2 libraries. Gnuradio
should use those for better interoperability.
---
 cmake/Modules/FindCodec2.cmake                     | 67 +++++++++++++++++
 gr-vocoder/CMakeLists.txt                          | 15 ++++
 gr-vocoder/examples/CMakeLists.txt                 |  9 ++-
 gr-vocoder/grc/CMakeLists.txt                      | 11 ++-
 gr-vocoder/grc/vocoder_codec2_decode_ps.xml        | 10 ++-
 gr-vocoder/grc/vocoder_codec2_encode_sp.xml        | 10 ++-
 gr-vocoder/include/gnuradio/vocoder/CMakeLists.txt | 10 +++
 gr-vocoder/include/gnuradio/vocoder/codec2.h       | 10 ++-
 gr-vocoder/lib/CMakeLists.txt                      | 83 +++-------------------
 gr-vocoder/python/vocoder/CMakeLists.txt           | 15 +++-
 gr-vocoder/swig/CMakeLists.txt                     |  4 ++
 gr-vocoder/swig/vocoder_swig.i                     | 25 ++++---
 12 files changed, 179 insertions(+), 90 deletions(-)
 create mode 100644 cmake/Modules/FindCodec2.cmake

--- /dev/null
+++ b/cmake/Modules/FindCodec2.cmake
@@ -0,0 +1,67 @@
+# Copyright 2016 Free Software Foundation, Inc.
+#
+# This file is part of GNU Radio
+#
+# GNU Radio is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 3, or (at your option)
+# any later version.
+#
+# GNU Radio is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with GNU Radio; see the file COPYING.  If not, write to
+# the Free Software Foundation, Inc., 51 Franklin Street,
+# Boston, MA 02110-1301, USA.
+
+##############################
+# Check for system libcodec2 #
+##############################
+
+INCLUDE(FindPkgConfig)
+INCLUDE(FindPackageHandleStandardArgs)
+
+pkg_check_modules(LIBCODEC2_PKG QUIET codec2)
+
+find_path(LIBCODEC2_INCLUDE_DIR NAMES codec2.h
+  PATHS
+  ${LIBCODEC2_PKG_INCLUDE_DIRS}
+  /usr/include/codec2
+  /usr/include
+  /usr/local/include/codec2
+  /usr/local/include
+  )
+
+find_library(LIBCODEC2_LIBRARIES NAMES codec2
+  PATHS
+  ${LIBCODEC2_PKG_LIBRARY_DIRS}
+  /usr/lib
+  /usr/local/lib
+  )
+
+if(LIBCODEC2_INCLUDE_DIR AND LIBCODEC2_LIBRARIES)
+  set(LIBCODEC2_FOUND TRUE)
+  set(LIBCODEC2_INCLUDE_DIRS ${LIBCODEC2_INCLUDE_DIR})
+  set(LIBCODEC2_LIBRARIES ${LIBCODEC2_LIBRARIES} ${LIBCODEC2_LIBRARY})
+  file(READ "${LIBCODEC2_INCLUDE_DIR}/codec2.h" _CODEC2_H_CONTENTS)
+  string(REGEX MATCHALL "CODEC2_MODE[_a-z0-9A-Z]+" CODEC2_MODES "${_CODEC2_H_CONTENTS}")
+  foreach(mode ${CODEC2_MODES})
+    set(LIBCODEC2_HAS_${mode} True)
+  endforeach()
+  if(EXISTS "${LIBCODEC2_INCLUDE_DIR}/freedv_api.h")
+    set(LIBCODEC2_HAS_FREEDV_API True)
+    file(READ "${LIBCODEC2_INCLUDE_DIR}/freedv_api.h" _FREEDV_API_H_CONTENTS)
+    string(REGEX MATCHALL "FREEDV_MODE[_a-z0-9A-Z]+" FREEDV_MODES "${_FREEDV_API_H_CONTENTS}")
+    foreach(mode ${FREEDV_MODES})
+      set(LIBCODEC2_HAS_${mode} True)
+    endforeach()
+  else()
+    set(LIBCODEC2_HAS_FREEDV_API false)
+  endif()
+endif(LIBCODEC2_INCLUDE_DIR AND LIBCODEC2_LIBRARIES)
+
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(LIBCODEC2 DEFAULT_MSG LIBCODEC2_LIBRARIES LIBCODEC2_INCLUDE_DIRS)
+mark_as_advanced(LIBCODEC2_INCLUDE_DIR LIBCODEC2_LIBRARIES)
--- a/gr-vocoder/CMakeLists.txt
+++ b/gr-vocoder/CMakeLists.txt
@@ -89,6 +89,21 @@
 )
 
 ########################################################################
+## CODEC2 Support
+########################################################################
+find_package(Codec2)
+if(LIBCODEC2_FOUND)
+  GR_APPEND_SUBCOMPONENT("codec2")
+  #message(STATUS "libcodec2 modes: ${CODEC2_MODES}")
+  if(LIBCODEC2_HAS_CODEC2_MODE_700)
+    #message(STATUS "libcodec2 has 700bps mode")
+  endif()
+  if (LIBCODEC2_HAS_FREEDV_API)
+    #message(STATUS "libcodec2 had FreeDV api modes: ${FREEDV_MODES}")
+  endif()
+endif(LIBCODEC2_FOUND)
+
+########################################################################
 # Add subdirectories
 ########################################################################
 add_subdirectory(include/gnuradio/vocoder)
--- a/gr-vocoder/examples/CMakeLists.txt
+++ b/gr-vocoder/examples/CMakeLists.txt
@@ -25,7 +25,6 @@
 GR_PYTHON_INSTALL(
     PROGRAMS
     alaw_audio_loopback.py
-    codec2_audio_loopback.py
     cvsd_audio_loopback.py
     g721_audio_loopback.py
     g723_24_audio_loopback.py
@@ -35,3 +34,11 @@
     DESTINATION ${GR_PKG_VOCODER_EXAMPLES_DIR}
     COMPONENT "vocoder_examples"
 )
+if(LIBCODEC2_FOUND)
+  GR_PYTHON_INSTALL(
+    PROGRAMS
+    codec2_audio_loopback.py
+    DESTINATION ${GR_PKG_VOCODER_EXAMPLES_DIR}
+    COMPONENT "vocoder_examples"
+    )
+endif(LIBCODEC2_FOUND)
--- a/gr-vocoder/grc/CMakeLists.txt
+++ b/gr-vocoder/grc/CMakeLists.txt
@@ -21,8 +21,6 @@
     vocoder_alaw_decode_bs.xml
     vocoder_alaw_encode_sb.xml
     vocoder_block_tree.xml
-    vocoder_codec2_decode_ps.xml
-    vocoder_codec2_encode_sp.xml
     vocoder_cvsd_decode_bs.xml
     vocoder_cvsd_decode.xml
     vocoder_cvsd_encode_sb.xml
@@ -40,3 +38,12 @@
     DESTINATION ${GRC_BLOCKS_DIR}
     COMPONENT "vocoder_python"
 )
+
+if(LIBCODEC2_FOUND)
+  install(FILES
+    vocoder_codec2_decode_ps.xml
+    vocoder_codec2_encode_sp.xml
+    DESTINATION ${GRC_BLOCKS_DIR}
+    COMPONENT "vocoder_python"
+    )
+endif(LIBCODEC2_FOUND)
--- a/gr-vocoder/grc/vocoder_codec2_decode_ps.xml
+++ b/gr-vocoder/grc/vocoder_codec2_decode_ps.xml
@@ -39,11 +39,19 @@
 			<name>1200 bps</name>
 			<key>codec2.MODE_1200</key>
 		</option>
+		<option>
+			<name>700 bps</name>
+			<key>codec2.MODE_700</key>
+		</option>
+		<option>
+			<name>700B bps</name>
+			<key>codec2.MODE_700B</key>
+		</option>
 	</param>
 	<sink>
 		<name>in</name>
 		<type>byte</type>
-		<vlen>{ 0: 64, 1: 48, 2: 64, 3: 56, 4: 52, 5: 48 }[$mode]</vlen>
+		<vlen>{ 0: 64, 1: 48, 2: 64, 3: 56, 4: 52, 5: 48, 6: 28, 7: 28 }[$mode]</vlen>
 	</sink>
 	<source>
 		<name>out</name>
--- a/gr-vocoder/grc/vocoder_codec2_encode_sp.xml
+++ b/gr-vocoder/grc/vocoder_codec2_encode_sp.xml
@@ -39,6 +39,14 @@
 			<name>1200 bps</name>
 			<key>codec2.MODE_1200</key>
 		</option>
+		<option>
+			<name>700 bps</name>
+			<key>codec2.MODE_700</key>
+		</option>
+		<option>
+			<name>700B bps</name>
+			<key>codec2.MODE_700B</key>
+		</option>
 	</param>
 	<sink>
 		<name>in</name>
@@ -47,7 +55,7 @@
 	<source>
 		<name>out</name>
 		<type>byte</type>
-		<vlen>{ 0: 64, 1: 48, 2: 64, 3: 56, 4: 52, 5: 48 }[$mode]</vlen>
+		<vlen>{ 0: 64, 1: 48, 2: 64, 3: 56, 4: 52, 5: 48, 6: 28, 7: 28 }[$mode]</vlen>
 	</source>
 </block>
 
--- a/gr-vocoder/include/gnuradio/vocoder/CMakeLists.txt
+++ b/gr-vocoder/include/gnuradio/vocoder/CMakeLists.txt
@@ -39,3 +39,13 @@
     DESTINATION ${GR_INCLUDE_DIR}/gnuradio/vocoder
     COMPONENT "vocoder_devel"
 )
+
+if(LIBCODEC2_FOUND)
+install(FILES
+    codec2.h
+    codec2_decode_ps.h
+    codec2_encode_sp.h
+    DESTINATION ${GR_INCLUDE_DIR}/gnuradio/vocoder
+    COMPONENT "vocoder_devel"
+)
+endif(LIBCODEC2_FOUND)
--- a/gr-vocoder/include/gnuradio/vocoder/codec2.h
+++ b/gr-vocoder/include/gnuradio/vocoder/codec2.h
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2014 Free Software Foundation, Inc.
+ * Copyright 2014,2016 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -26,7 +26,7 @@
 #include <gnuradio/vocoder/api.h>
 
 extern "C" {
-#include "../lib/codec2/codec2.h"
+#include <codec2/codec2.h>
 }
 
 namespace gr {
@@ -42,6 +42,12 @@
 	MODE_1400 = CODEC2_MODE_1400,
 	MODE_1300 = CODEC2_MODE_1300,
 	MODE_1200 = CODEC2_MODE_1200,
+#ifdef CODEC2_MODE_700
+	MODE_700 = CODEC2_MODE_700,
+#endif
+#ifdef CODEC2_MODE_700B
+	MODE_700B = CODEC2_MODE_700B,
+#endif
       };
 
     private:
--- a/gr-vocoder/lib/CMakeLists.txt
+++ b/gr-vocoder/lib/CMakeLists.txt
@@ -82,71 +82,6 @@
 mark_as_advanced(LIBGSM_INCLUDE_DIR LIBGSM_LIBRARIES)
 
 ########################################################################
-# Check for system libcodec2 via CMake variable GR_USE_SYSTEM_LIBCODEC2
-#  if undefined, try to find system libgsm library,
-#    but if there is no system library use a local copy.
-#  if defined True, use system libcodec2 if found, otherwise do not
-#     use a local copy.
-#  if defined False, use the local copy
-########################################################################
-if (NOT DEFINED GR_USE_SYSTEM_LIBCODEC2)
-   find_path(LIBCODEC2_INCLUDE_DIR NAMES codec2.h
-    PATHS
-    ${LIBCODEC2_PKG_INCLUDE_DIRS}
-    /usr/include/codec2
-    /usr/include
-  )
-
-  find_library(LIBCODEC2_LIBRARIES NAMES codec2
-    PATHS
-    ${LIBCODEC2_PKG_LIBRARY_DIRS}
-    /usr/lib
-  )
-
- if(LIBCODEC2_INCLUDE_DIR AND LIBCODEC2_LIBRARIES)
-   set(GR_USE_SYSTEM_LIBCODEC2 TRUE CACHE INTERNAL "System libcodec2 found")
-   message(STATUS "Found libcodec2: ${LIBCODEC2_INCLUDE_DIR}, ${LIBCODEC2_LIBRARIES}")
-   set(GR_USE_LOCAL_LIBCODEC2 FALSE)
-   set(GR_USE_SYSTEM_LIBCODEC2 TRUE)
- else(LIBCODEC2_INCLUDE_DIR AND LIBCODEC2_LIBRARIES)
-   set(GR_USE_SYSTEM_LIBCODEC2 FALSE CACHE INTERNAL "System libcodec2 found")
-   message(STATUS "System libcodec2 not found.")
-   set(GR_USE_LOCAL_LIBCODEC2 TRUE)
- endif(LIBCODEC2_INCLUDE_DIR AND LIBCODEC2_LIBRARIES)
-else (NOT DEFINED GR_USE_SYSTEM_LIBCODEC2)
- if (GR_USE_SYSTEM_LIBCODEC2)
-    find_path(LIBCODEC2_INCLUDE_DIR NAMES codec2.h
-    PATHS
-    ${LIBCODEC2_PKG_INCLUDE_DIRS}
-    /usr/include/codec2
-    /usr/include
-  )
-
-  find_library(LIBCODEC2_LIBRARIES NAMES codec2
-    PATHS
-    ${LIBGSM_PKG_LIBRARY_DIRS}
-    /usr/lib
-  )
-
-  if(LIBCODEC2_INCLUDE_DIR AND LIBCODEC2_LIBRARIES)
-    set(GR_USE_SYSTEM_LIBCODEC2 TRUE CACHE INTERNAL "System libcodec2 found")
-    message(STATUS "Found libgsm: ${LIBCODEC2_INCLUDE_DIR}, ${LIBCODEC2_LIBRARIES}")
-    set(GR_USE_LOCAL_LIBCODEC2 FALSE)
-  else(LIBGCODEC2_INCLUDE_DIR AND LIBCODEC2_LIBRARIES)
-    set(GR_USE_SYSTEM_LIBCODEC2 FALSE CACHE INTERNAL "System libcodec2 found")
-    message(STATUS "System libcodec2 not found.")
-    set(GR_USE_LOCAL_LIBCODEC2 FALSE)
-   endif(LIBCODEC2_INCLUDE_DIR AND LIBCODEC2_LIBRARIES)
- else (GR_USE_SYSTEM_LIBCODEC2)
-    set(GR_USE_LOCAL_LIBCODEC2 TRUE)
-    message(STATUS "Using gnuradio local copy of libcodec2.")
- endif (GR_USE_SYSTEM_LIBCODEC2)
-endif (NOT DEFINED GR_USE_SYSTEM_LIBCODEC2)
-
-mark_as_advanced(LIBCODEC2_INCLUDE_DIR LIBCODEC2_LIBRARIES)
-
-
-########################################################################
 # Setup the include and linker paths
 ########################################################################
 include_directories(
@@ -167,9 +102,6 @@
 list(APPEND gr_vocoder_sources
     alaw_decode_bs_impl.cc
     alaw_encode_sb_impl.cc
-    codec2.cc
-    codec2_decode_ps_impl.cc
-    codec2_encode_sp_impl.cc
     cvsd_decode_bs_impl.cc
     cvsd_encode_sb_impl.cc
     g721_decode_bs_impl.cc
@@ -183,6 +115,13 @@
     ulaw_decode_bs_impl.cc
     ulaw_encode_sb_impl.cc
 )
+if(LIBCODEC2_FOUND)
+  list(APPEND gr_vocoder_sources
+    codec2.cc
+    codec2_decode_ps_impl.cc
+    codec2_encode_sp_impl.cc
+    )
+endif(LIBCODEC2_FOUND)
 
 #Add Windows DLL resource file if using MSVC
 if(MSVC)
@@ -203,10 +142,6 @@
 ########################################################################
 GR_INCLUDE_SUBDIRECTORY(g7xx)
 
-if(GR_USE_LOCAL_LIBCODEC2)
- GR_INCLUDE_SUBDIRECTORY(codec2)
-endif(GR_USE_LOCAL_LIBCODEC2)
-
 if(GR_USE_LOCAL_LIBGSM)
  GR_INCLUDE_SUBDIRECTORY(gsm)
 endif(GR_USE_LOCAL_LIBGSM)
@@ -216,9 +151,9 @@
     ${Boost_LIBRARIES}
 )
 
-if(GR_USE_SYSTEM_LIBCODEC2)
+if(LIBCODEC2_LIBRARIES)
   list(APPEND vocoder_libs ${LIBCODEC2_LIBRARIES})
-endif(GR_USE_SYSTEM_LIBCODEC2)
+endif(LIBCODEC2_LIBRARIES)
 
 if(GR_USE_SYSTEM_LIBGSM)
   list(APPEND vocoder_libs ${LIBGSM_LIBRARIES})
--- a/gr-vocoder/python/vocoder/CMakeLists.txt
+++ b/gr-vocoder/python/vocoder/CMakeLists.txt
@@ -47,7 +47,20 @@
     )
 
   include(GrTest)
-  file(GLOB py_qa_test_files "qa_*.py")
+  list(APPEND py_qa_test_files
+    qa_alaw_vocoder.py
+    qa_cvsd_vocoder.py
+    qa_g721_vocoder.py
+    qa_g723_24_vocoder.py
+    qa_g723_40_vocoder.py
+    qa_gsm_full_rate.py
+    qa_ulaw_vocoder.py
+    )
+  if(LIBCODEC2_FOUND)
+    list(APPEND py_qa_test_files
+      qa_codec2_vocoder.py
+      )
+  endif()
   foreach(py_qa_test_file ${py_qa_test_files})
     get_filename_component(py_qa_test_name ${py_qa_test_file} NAME_WE)
     GR_ADD_TEST(${py_qa_test_name} ${QA_PYTHON_EXECUTABLE} ${PYTHON_DASH_B} ${py_qa_test_file})
--- a/gr-vocoder/swig/CMakeLists.txt
+++ b/gr-vocoder/swig/CMakeLists.txt
@@ -33,6 +33,10 @@
   list(APPEND GR_SWIG_FLAGS "-DGR_CTRLPORT")
 endif(ENABLE_GR_CTRLPORT)
 
+if(LIBCODEC2_FOUND)
+  list(APPEND GR_SWIG_FLAGS "-DLIBCODEC2_FOUND")
+endif(LIBCODEC2_FOUND)
+
 set(GR_SWIG_DOC_FILE ${CMAKE_CURRENT_BINARY_DIR}/vocoder_swig_doc.i)
 set(GR_SWIG_DOC_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/../include/gnuradio/vocoder)
 set(GR_SWIG_DOCS_TARGET_DEPS runtime_swig_swig_doc)
--- a/gr-vocoder/swig/vocoder_swig.i
+++ b/gr-vocoder/swig/vocoder_swig.i
@@ -30,9 +30,6 @@
 %{
 #include "gnuradio/vocoder/alaw_decode_bs.h"
 #include "gnuradio/vocoder/alaw_encode_sb.h"
-#include "gnuradio/vocoder/codec2.h"
-#include "gnuradio/vocoder/codec2_decode_ps.h"
-#include "gnuradio/vocoder/codec2_encode_sp.h"
 #include "gnuradio/vocoder/cvsd_decode_bs.h"
 #include "gnuradio/vocoder/cvsd_encode_sb.h"
 #include "gnuradio/vocoder/g721_decode_bs.h"
@@ -49,9 +46,6 @@
 
 %include "gnuradio/vocoder/alaw_decode_bs.h"
 %include "gnuradio/vocoder/alaw_encode_sb.h"
-%include "gnuradio/vocoder/codec2.h"
-%include "gnuradio/vocoder/codec2_decode_ps.h"
-%include "gnuradio/vocoder/codec2_encode_sp.h"
 %include "gnuradio/vocoder/cvsd_decode_bs.h"
 %include "gnuradio/vocoder/cvsd_encode_sb.h"
 %include "gnuradio/vocoder/g721_decode_bs.h"
@@ -67,8 +61,6 @@
 
 GR_SWIG_BLOCK_MAGIC2(vocoder, alaw_decode_bs);
 GR_SWIG_BLOCK_MAGIC2(vocoder, alaw_encode_sb);
-GR_SWIG_BLOCK_MAGIC2(vocoder, codec2_decode_ps);
-GR_SWIG_BLOCK_MAGIC2(vocoder, codec2_encode_sp);
 GR_SWIG_BLOCK_MAGIC2(vocoder, cvsd_decode_bs);
 GR_SWIG_BLOCK_MAGIC2(vocoder, cvsd_encode_sb);
 GR_SWIG_BLOCK_MAGIC2(vocoder, g721_decode_bs);
@@ -81,3 +73,20 @@
 GR_SWIG_BLOCK_MAGIC2(vocoder, gsm_fr_encode_sp);
 GR_SWIG_BLOCK_MAGIC2(vocoder, ulaw_decode_bs);
 GR_SWIG_BLOCK_MAGIC2(vocoder, ulaw_encode_sb);
+
+#ifdef LIBCODEC2_FOUND
+%{
+#include <codec2/codec2.h>
+#include "gnuradio/vocoder/codec2.h"
+#include "gnuradio/vocoder/codec2_decode_ps.h"
+#include "gnuradio/vocoder/codec2_encode_sp.h"
+%}
+
+%include <codec2/codec2.h>
+%include "gnuradio/vocoder/codec2.h"
+%include "gnuradio/vocoder/codec2_decode_ps.h"
+%include "gnuradio/vocoder/codec2_encode_sp.h"
+
+GR_SWIG_BLOCK_MAGIC2(vocoder, codec2_decode_ps);
+GR_SWIG_BLOCK_MAGIC2(vocoder, codec2_encode_sp);
+#endif

From 66300b7abfb32dda70cd7bba3b96f60c2080bcdd Mon Sep 17 00:00:00 2001
From: "A. Maitland Bottoms" <bottoms@debian.org>
Date: Sat, 25 Jun 2016 18:08:44 -0400
Subject: [PATCH 12/27] gr-vocoder: gsm subcomponent using external gsm library

---
 cmake/Modules/FindGSM.cmake                        | 52 ++++++++++++++
 gr-vocoder/CMakeLists.txt                          | 10 ++-
 gr-vocoder/examples/CMakeLists.txt                 | 11 ++-
 gr-vocoder/grc/CMakeLists.txt                      | 13 +++-
 gr-vocoder/include/gnuradio/vocoder/CMakeLists.txt | 13 ++--
 gr-vocoder/lib/CMakeLists.txt                      | 82 +++-------------------
 gr-vocoder/lib/gsm_fr_decode_ps_impl.cc            |  3 +-
 gr-vocoder/lib/gsm_fr_encode_sp_impl.cc            |  3 +-
 gr-vocoder/python/vocoder/CMakeLists.txt           |  8 ++-
 gr-vocoder/swig/CMakeLists.txt                     |  6 +-
 gr-vocoder/swig/vocoder_swig.i                     | 21 ++++--
 11 files changed, 127 insertions(+), 95 deletions(-)
 create mode 100644 cmake/Modules/FindGSM.cmake

--- /dev/null
+++ b/cmake/Modules/FindGSM.cmake
@@ -0,0 +1,52 @@
+# Copyright 2016 Free Software Foundation, Inc.
+#
+# This file is part of GNU Radio
+#
+# GNU Radio is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 3, or (at your option)
+# any later version.
+#
+# GNU Radio is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with GNU Radio; see the file COPYING.  If not, write to
+# the Free Software Foundation, Inc., 51 Franklin Street,
+# Boston, MA 02110-1301, USA.
+
+###########################
+# Check for system libgsm #
+###########################
+
+INCLUDE(FindPkgConfig)
+INCLUDE(FindPackageHandleStandardArgs)
+
+pkg_check_modules(LIBGSM_PKG QUIET gsm)
+
+find_path(LIBGSM_INCLUDE_DIR NAMES gsm.h
+  PATHS
+  ${LIBGSM_PKG_INCLUDE_DIRS}
+  /usr/local/include/gsm
+  /usr/local/include
+  /usr/include/gsm
+  /usr/include
+  )
+
+find_library(LIBGSM_LIBRARIES NAMES gsm
+  PATHS
+  ${LIBGSM_PKG_LIBRARY_DIRS}
+  /usr/local/lib
+  /usr/lib
+  )
+
+if(LIBGSM_INCLUDE_DIR AND LIBGSM_LIBRARIES)
+  set(LIBGSM_FOUND TRUE)
+  set(LIBGSM_INCLUDE_DIRS ${LIBGSM_INCLUDE_DIR})
+  set(LIBGSM_LIBRARIES ${LIBGSM_LIBRARIES} ${LIBGSM_LIBRARY})
+endif(LIBGSM_INCLUDE_DIR AND LIBGSM_LIBRARIES)
+
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(LIBGSM DEFAULT_MSG LIBGSM_LIBRARIES LIBGSM_INCLUDE_DIRS)
+mark_as_advanced(LIBGSM_INCLUDE_DIR LIBGSM_LIBRARIES)
--- a/gr-vocoder/CMakeLists.txt
+++ b/gr-vocoder/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2011 Free Software Foundation, Inc.
+# Copyright 2011,2016 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -104,6 +104,14 @@
 endif(LIBCODEC2_FOUND)
 
 ########################################################################
+## GSM Support
+########################################################################
+find_package(GSM)
+if(LIBGSM_FOUND)
+  GR_APPEND_SUBCOMPONENT("gsm")
+endif(LIBGSM_FOUND)
+
+########################################################################
 # Add subdirectories
 ########################################################################
 add_subdirectory(include/gnuradio/vocoder)
--- a/gr-vocoder/examples/CMakeLists.txt
+++ b/gr-vocoder/examples/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2011 Free Software Foundation, Inc.
+# Copyright 2011,2016 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -29,7 +29,6 @@
     g721_audio_loopback.py
     g723_24_audio_loopback.py
     g723_40_audio_loopback.py
-    gsm_audio_loopback.py
     ulaw_audio_loopback.py
     DESTINATION ${GR_PKG_VOCODER_EXAMPLES_DIR}
     COMPONENT "vocoder_examples"
@@ -42,3 +41,11 @@
     COMPONENT "vocoder_examples"
     )
 endif(LIBCODEC2_FOUND)
+if(LIBGSM_FOUND)
+  GR_PYTHON_INSTALL(
+    PROGRAMS
+    gsm_audio_loopback.py
+    DESTINATION ${GR_PKG_VOCODER_EXAMPLES_DIR}
+    COMPONENT "vocoder_examples"
+    )
+endif(LIBGSM_FOUND)
--- a/gr-vocoder/grc/CMakeLists.txt
+++ b/gr-vocoder/grc/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2011 Free Software Foundation, Inc.
+# Copyright 2011,2016 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -31,8 +31,6 @@
     vocoder_g723_24_encode_sb.xml
     vocoder_g723_40_decode_bs.xml
     vocoder_g723_40_encode_sb.xml
-    vocoder_gsm_fr_decode_ps.xml
-    vocoder_gsm_fr_encode_sp.xml
     vocoder_ulaw_decode_bs.xml
     vocoder_ulaw_encode_sb.xml
     DESTINATION ${GRC_BLOCKS_DIR}
@@ -47,3 +45,12 @@
     COMPONENT "vocoder_python"
     )
 endif(LIBCODEC2_FOUND)
+
+if(LIBGSM_FOUND)
+  install(FILES
+    vocoder_gsm_fr_decode_ps.xml
+    vocoder_gsm_fr_encode_sp.xml
+    DESTINATION ${GRC_BLOCKS_DIR}
+    COMPONENT "vocoder_python"
+    )
+endif(LIBGSM_FOUND)
--- a/gr-vocoder/include/gnuradio/vocoder/CMakeLists.txt
+++ b/gr-vocoder/include/gnuradio/vocoder/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2012,2013 Free Software Foundation, Inc.
+# Copyright 2012,2013,2016 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -32,14 +32,11 @@
     g723_24_encode_sb.h
     g723_40_decode_bs.h
     g723_40_encode_sb.h
-    gsm_fr_decode_ps.h
-    gsm_fr_encode_sp.h
     ulaw_decode_bs.h
     ulaw_encode_sb.h
     DESTINATION ${GR_INCLUDE_DIR}/gnuradio/vocoder
     COMPONENT "vocoder_devel"
 )
-
 if(LIBCODEC2_FOUND)
 install(FILES
     codec2.h
@@ -49,3 +46,11 @@
     COMPONENT "vocoder_devel"
 )
 endif(LIBCODEC2_FOUND)
+if(LIBGSM_FOUND)
+install(FILES
+    gsm_fr_decode_ps.h
+    gsm_fr_encode_sp.h
+    DESTINATION ${GR_INCLUDE_DIR}/gnuradio/vocoder
+    COMPONENT "vocoder_devel"
+)
+endif(LIBGSM_FOUND)
--- a/gr-vocoder/lib/CMakeLists.txt
+++ b/gr-vocoder/lib/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2011,2013 Free Software Foundation, Inc.
+# Copyright 2011,2013,2016 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -18,70 +18,6 @@
 # Boston, MA 02110-1301, USA.
 
 ########################################################################
-# Check for system libgsm via CMake variable GR_USE_SYSTEM_LIBGSM ....
-#  if undefined, try to find system libgsm library,
-#    but if there is no system library use a local copy.
-#  if defined True, use system libgsm if found, otherwise do not
-#     use a local copy.
-#  if defined False, use the local copy
-########################################################################
-if (NOT DEFINED GR_USE_SYSTEM_LIBGSM)
-   find_path(LIBGSM_INCLUDE_DIR NAMES gsm.h
-    PATHS
-    ${LIBGSM_PKG_INCLUDE_DIRS}
-    /usr/include/gsm
-    /usr/include
-  )
-
-  find_library(LIBGSM_LIBRARIES NAMES gsm
-    PATHS
-    ${LIBGSM_PKG_LIBRARY_DIRS}
-    /usr/lib
-  )
-
- if(LIBGSM_INCLUDE_DIR AND LIBGSM_LIBRARIES)
-   set(GR_USE_SYSTEM_LIBGSM TRUE CACHE INTERNAL "System libgsm found")
-   message(STATUS "Found libgsm: ${LIBGSM_INCLUDE_DIR}, ${LIBGSM_LIBRARIES}")
-   set(GR_USE_LOCAL_LIBGSM FALSE)
-   set(GR_USE_SYSTEM_LIBGSM TRUE)
- else(LIBGSM_INCLUDE_DIR AND LIBGSM_LIBRARIES)
-   set(GR_USE_SYSTEM_LIBGSM FALSE CACHE INTERNAL "System libgsm found")
-   message(STATUS "System libgsm not found.")
-   set(GR_USE_LOCAL_LIBGSM TRUE)
- endif(LIBGSM_INCLUDE_DIR AND LIBGSM_LIBRARIES)
-else (NOT DEFINED GR_USE_SYSTEM_LIBGSM)
- if (GR_USE_SYSTEM_LIBGSM)
-    find_path(LIBGSM_INCLUDE_DIR NAMES gsm.h
-    PATHS
-    ${LIBGSM_PKG_INCLUDE_DIRS}
-    /usr/include/gsm
-    /usr/include
-  )
-
-  find_library(LIBGSM_LIBRARIES NAMES gsm
-    PATHS
-    ${LIBGSM_PKG_LIBRARY_DIRS}
-    /usr/lib
-  )
-
-  if(LIBGSM_INCLUDE_DIR AND LIBGSM_LIBRARIES)
-    set(GR_USE_SYSTEM_LIBGSM TRUE CACHE INTERNAL "System libgsm found")
-    message(STATUS "Found libgsm: ${LIBGSM_INCLUDE_DIR}, ${LIBGSM_LIBRARIES}")
-    set(GR_USE_LOCAL_LIBGSM FALSE)
-  else(LIBGSM_INCLUDE_DIR AND LIBGSM_LIBRARIES)
-    set(GR_USE_SYSTEM_LIBGSM FALSE CACHE INTERNAL "System libgsm found")
-    message(STATUS "System libgsm not found.")
-    set(GR_USE_LOCAL_LIBGSM FALSE)
-   endif(LIBGSM_INCLUDE_DIR AND LIBGSM_LIBRARIES)
- else (GR_USE_SYSTEM_LIBGSM)
-    set(GR_USE_LOCAL_LIBGSM TRUE)
-    message(STATUS "Using gnuradio local copy of libgsm.")
- endif (GR_USE_SYSTEM_LIBGSM)
-endif (NOT DEFINED GR_USE_SYSTEM_LIBGSM)
-
-mark_as_advanced(LIBGSM_INCLUDE_DIR LIBGSM_LIBRARIES)
-
-########################################################################
 # Setup the include and linker paths
 ########################################################################
 include_directories(
@@ -110,8 +46,6 @@
     g723_24_encode_sb_impl.cc
     g723_40_decode_bs_impl.cc
     g723_40_encode_sb_impl.cc
-    gsm_fr_decode_ps_impl.cc
-    gsm_fr_encode_sp_impl.cc
     ulaw_decode_bs_impl.cc
     ulaw_encode_sb_impl.cc
 )
@@ -122,6 +56,12 @@
     codec2_encode_sp_impl.cc
     )
 endif(LIBCODEC2_FOUND)
+if(LIBGSM_FOUND)
+  list(APPEND gr_vocoder_sources
+    gsm_fr_decode_ps_impl.cc
+    gsm_fr_encode_sp_impl.cc
+    )
+endif(LIBGSM_FOUND)
 
 #Add Windows DLL resource file if using MSVC
 if(MSVC)
@@ -142,10 +82,6 @@
 ########################################################################
 GR_INCLUDE_SUBDIRECTORY(g7xx)
 
-if(GR_USE_LOCAL_LIBGSM)
- GR_INCLUDE_SUBDIRECTORY(gsm)
-endif(GR_USE_LOCAL_LIBGSM)
-
 list(APPEND vocoder_libs
     gnuradio-runtime
     ${Boost_LIBRARIES}
@@ -155,9 +91,9 @@
   list(APPEND vocoder_libs ${LIBCODEC2_LIBRARIES})
 endif(LIBCODEC2_LIBRARIES)
 
-if(GR_USE_SYSTEM_LIBGSM)
+if(LIBGSM_LIBRARIES)
   list(APPEND vocoder_libs ${LIBGSM_LIBRARIES})
-endif(GR_USE_SYSTEM_LIBGSM)
+endif(LIBGSM_LIBRARIES)
 
 add_library(gnuradio-vocoder SHARED ${gr_vocoder_sources})
 target_link_libraries(gnuradio-vocoder ${vocoder_libs})
--- a/gr-vocoder/lib/gsm_fr_decode_ps_impl.cc
+++ b/gr-vocoder/lib/gsm_fr_decode_ps_impl.cc
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2005,2010,2013 Free Software Foundation, Inc.
+ * Copyright 2005,2010,2013,2016 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -24,6 +24,7 @@
 #include "config.h"
 #endif
 
+#define GSM_SAMPLES_PER_FRAME  160
 #include "gsm_fr_decode_ps_impl.h"
 #include <gnuradio/io_signature.h>
 #include <stdexcept>
--- a/gr-vocoder/lib/gsm_fr_encode_sp_impl.cc
+++ b/gr-vocoder/lib/gsm_fr_encode_sp_impl.cc
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2005,2010,2013 Free Software Foundation, Inc.
+ * Copyright 2005,2010,2013,2016 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -24,6 +24,7 @@
 #include "config.h"
 #endif
 
+#define GSM_SAMPLES_PER_FRAME  160
 #include "gsm_fr_encode_sp_impl.h"
 #include <gnuradio/io_signature.h>
 #include <stdexcept>
--- a/gr-vocoder/python/vocoder/CMakeLists.txt
+++ b/gr-vocoder/python/vocoder/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2011 Free Software Foundation, Inc.
+# Copyright 2011,2016 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -53,7 +53,6 @@
     qa_g721_vocoder.py
     qa_g723_24_vocoder.py
     qa_g723_40_vocoder.py
-    qa_gsm_full_rate.py
     qa_ulaw_vocoder.py
     )
   if(LIBCODEC2_FOUND)
@@ -61,6 +60,11 @@
       qa_codec2_vocoder.py
       )
   endif()
+  if(LIBGSM_FOUND)
+    list(APPEND py_qa_test_files
+      qa_gsm_full_rate.py
+      )
+  endif()
   foreach(py_qa_test_file ${py_qa_test_files})
     get_filename_component(py_qa_test_name ${py_qa_test_file} NAME_WE)
     GR_ADD_TEST(${py_qa_test_name} ${QA_PYTHON_EXECUTABLE} ${PYTHON_DASH_B} ${py_qa_test_file})
--- a/gr-vocoder/swig/CMakeLists.txt
+++ b/gr-vocoder/swig/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2011 Free Software Foundation, Inc.
+# Copyright 2011,2016 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -37,6 +37,10 @@
   list(APPEND GR_SWIG_FLAGS "-DLIBCODEC2_FOUND")
 endif(LIBCODEC2_FOUND)
 
+if(LIBGSM_FOUND)
+  list(APPEND GR_SWIG_FLAGS "-DLIBGSM_FOUND")
+endif(LIBGSM_FOUND)
+
 set(GR_SWIG_DOC_FILE ${CMAKE_CURRENT_BINARY_DIR}/vocoder_swig_doc.i)
 set(GR_SWIG_DOC_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/../include/gnuradio/vocoder)
 set(GR_SWIG_DOCS_TARGET_DEPS runtime_swig_swig_doc)
--- a/gr-vocoder/swig/vocoder_swig.i
+++ b/gr-vocoder/swig/vocoder_swig.i
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2011,2013 Free Software Foundation, Inc.
+ * Copyright 2011,2013,2016 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -38,8 +38,6 @@
 #include "gnuradio/vocoder/g723_24_encode_sb.h"
 #include "gnuradio/vocoder/g723_40_decode_bs.h"
 #include "gnuradio/vocoder/g723_40_encode_sb.h"
-#include "gnuradio/vocoder/gsm_fr_decode_ps.h"
-#include "gnuradio/vocoder/gsm_fr_encode_sp.h"
 #include "gnuradio/vocoder/ulaw_decode_bs.h"
 #include "gnuradio/vocoder/ulaw_encode_sb.h"
 %}
@@ -54,8 +52,6 @@
 %include "gnuradio/vocoder/g723_24_encode_sb.h"
 %include "gnuradio/vocoder/g723_40_decode_bs.h"
 %include "gnuradio/vocoder/g723_40_encode_sb.h"
-%include "gnuradio/vocoder/gsm_fr_decode_ps.h"
-%include "gnuradio/vocoder/gsm_fr_encode_sp.h"
 %include "gnuradio/vocoder/ulaw_decode_bs.h"
 %include "gnuradio/vocoder/ulaw_encode_sb.h"
 
@@ -69,8 +65,6 @@
 GR_SWIG_BLOCK_MAGIC2(vocoder, g723_24_encode_sb);
 GR_SWIG_BLOCK_MAGIC2(vocoder, g723_40_decode_bs);
 GR_SWIG_BLOCK_MAGIC2(vocoder, g723_40_encode_sb);
-GR_SWIG_BLOCK_MAGIC2(vocoder, gsm_fr_decode_ps);
-GR_SWIG_BLOCK_MAGIC2(vocoder, gsm_fr_encode_sp);
 GR_SWIG_BLOCK_MAGIC2(vocoder, ulaw_decode_bs);
 GR_SWIG_BLOCK_MAGIC2(vocoder, ulaw_encode_sb);
 
@@ -90,3 +84,16 @@
 GR_SWIG_BLOCK_MAGIC2(vocoder, codec2_decode_ps);
 GR_SWIG_BLOCK_MAGIC2(vocoder, codec2_encode_sp);
 #endif
+
+#ifdef LIBGSM_FOUND
+%{
+#include "gnuradio/vocoder/gsm_fr_decode_ps.h"
+#include "gnuradio/vocoder/gsm_fr_encode_sp.h"
+%}
+
+%include "gnuradio/vocoder/gsm_fr_decode_ps.h"
+%include "gnuradio/vocoder/gsm_fr_encode_sp.h"
+
+GR_SWIG_BLOCK_MAGIC2(vocoder, gsm_fr_decode_ps);
+GR_SWIG_BLOCK_MAGIC2(vocoder, gsm_fr_encode_sp);
+#endif

From 0642d8150c8e7c8668382b2159abad3da8b38bd8 Mon Sep 17 00:00:00 2001
From: "A. Maitland Bottoms" <bottoms@debian.org>
Date: Sat, 10 Feb 2018 20:52:32 -0500
Subject: [PATCH 13/27] fix vocoder test

Replacing file(GLOB... with list(APPEND... needs the
full path of referenced files.
---
 gr-vocoder/python/vocoder/CMakeLists.txt | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

--- a/gr-vocoder/python/vocoder/CMakeLists.txt
+++ b/gr-vocoder/python/vocoder/CMakeLists.txt
@@ -48,21 +48,21 @@
 
   include(GrTest)
   list(APPEND py_qa_test_files
-    qa_alaw_vocoder.py
-    qa_cvsd_vocoder.py
-    qa_g721_vocoder.py
-    qa_g723_24_vocoder.py
-    qa_g723_40_vocoder.py
-    qa_ulaw_vocoder.py
+    ${CMAKE_CURRENT_SOURCE_DIR}/qa_alaw_vocoder.py
+    ${CMAKE_CURRENT_SOURCE_DIR}/qa_cvsd_vocoder.py
+    ${CMAKE_CURRENT_SOURCE_DIR}/qa_g721_vocoder.py
+    ${CMAKE_CURRENT_SOURCE_DIR}/qa_g723_24_vocoder.py
+    ${CMAKE_CURRENT_SOURCE_DIR}/qa_g723_40_vocoder.py
+    ${CMAKE_CURRENT_SOURCE_DIR}/qa_ulaw_vocoder.py
     )
   if(LIBCODEC2_FOUND)
     list(APPEND py_qa_test_files
-      qa_codec2_vocoder.py
+      ${CMAKE_CURRENT_SOURCE_DIR}/qa_codec2_vocoder.py
       )
   endif()
   if(LIBGSM_FOUND)
     list(APPEND py_qa_test_files
-      qa_gsm_full_rate.py
+      ${CMAKE_CURRENT_SOURCE_DIR}/qa_gsm_full_rate.py
       )
   endif()
   foreach(py_qa_test_file ${py_qa_test_files})

From 2be47d8d73e750f6410d8585f75d192d56653750 Mon Sep 17 00:00:00 2001
From: "A. Maitland Bottoms" <bottoms@debian.org>
Date: Sun, 26 Jun 2016 21:47:47 -0400
Subject: [PATCH 14/27] add freedv blocks

---
 gr-vocoder/CMakeLists.txt                          |   1 +
 gr-vocoder/grc/CMakeLists.txt                      |   9 ++
 gr-vocoder/grc/vocoder_block_tree.xml              |   2 +
 gr-vocoder/grc/vocoder_freedv_rx_ss.xml            |  58 ++++++++
 gr-vocoder/grc/vocoder_freedv_tx_ss.xml            |  57 ++++++++
 gr-vocoder/include/gnuradio/vocoder/CMakeLists.txt |   9 ++
 gr-vocoder/include/gnuradio/vocoder/freedv_api.h   |  68 +++++++++
 gr-vocoder/include/gnuradio/vocoder/freedv_rx_ss.h |  63 +++++++++
 gr-vocoder/include/gnuradio/vocoder/freedv_tx_ss.h |  59 ++++++++
 gr-vocoder/lib/CMakeLists.txt                      |   7 +
 gr-vocoder/lib/freedv_api.cc                       |  33 +++++
 gr-vocoder/lib/freedv_rx_ss_impl.cc                | 155 +++++++++++++++++++++
 gr-vocoder/lib/freedv_rx_ss_impl.h                 |  81 +++++++++++
 gr-vocoder/lib/freedv_tx_ss_impl.cc                |  98 +++++++++++++
 gr-vocoder/lib/freedv_tx_ss_impl.h                 |  72 ++++++++++
 gr-vocoder/swig/CMakeLists.txt                     |   4 +
 gr-vocoder/swig/vocoder_swig.i                     |  19 +++
 17 files changed, 795 insertions(+)
 create mode 100644 gr-vocoder/grc/vocoder_freedv_rx_ss.xml
 create mode 100644 gr-vocoder/grc/vocoder_freedv_tx_ss.xml
 create mode 100644 gr-vocoder/include/gnuradio/vocoder/freedv_api.h
 create mode 100644 gr-vocoder/include/gnuradio/vocoder/freedv_rx_ss.h
 create mode 100644 gr-vocoder/include/gnuradio/vocoder/freedv_tx_ss.h
 create mode 100644 gr-vocoder/lib/freedv_api.cc
 create mode 100644 gr-vocoder/lib/freedv_rx_ss_impl.cc
 create mode 100644 gr-vocoder/lib/freedv_rx_ss_impl.h
 create mode 100644 gr-vocoder/lib/freedv_tx_ss_impl.cc
 create mode 100644 gr-vocoder/lib/freedv_tx_ss_impl.h

--- a/gr-vocoder/CMakeLists.txt
+++ b/gr-vocoder/CMakeLists.txt
@@ -99,6 +99,7 @@
     #message(STATUS "libcodec2 has 700bps mode")
   endif()
   if (LIBCODEC2_HAS_FREEDV_API)
+    GR_APPEND_SUBCOMPONENT("freedv")
     #message(STATUS "libcodec2 had FreeDV api modes: ${FREEDV_MODES}")
   endif()
 endif(LIBCODEC2_FOUND)
--- a/gr-vocoder/grc/CMakeLists.txt
+++ b/gr-vocoder/grc/CMakeLists.txt
@@ -46,6 +46,15 @@
     )
 endif(LIBCODEC2_FOUND)
 
+if(LIBCODEC2_HAS_FREEDV_API)
+  install(FILES
+    vocoder_freedv_rx_ss.xml
+    vocoder_freedv_tx_ss.xml
+    DESTINATION ${GRC_BLOCKS_DIR}
+    COMPONENT "vocoder_python"
+    )
+endif(LIBCODEC2_HAS_FREEDV_API)
+
 if(LIBGSM_FOUND)
   install(FILES
     vocoder_gsm_fr_decode_ps.xml
--- a/gr-vocoder/grc/vocoder_block_tree.xml
+++ b/gr-vocoder/grc/vocoder_block_tree.xml
@@ -38,6 +38,8 @@
 		<block>vocoder_cvsd_encode_sb</block>
 		<block>vocoder_cvsd_decode_bf</block>
 		<block>vocoder_cvsd_encode_fb</block>
+		<block>vocoder_freedv_tx_ss</block>
+		<block>vocoder_freedv_rx_ss</block>
 		<block>vocoder_g721_decode_bs</block>
 		<block>vocoder_g721_encode_sb</block>
 		<block>vocoder_g723_24_decode_bs</block>
--- /dev/null
+++ b/gr-vocoder/grc/vocoder_freedv_rx_ss.xml
@@ -0,0 +1,58 @@
+<?xml version="1.0"?>
+<!--
+###################################################
+## FreeDV audio modem demodulator
+###################################################
+ -->
+<block>
+  <name>FreeDV demodulator</name>
+  <key>vocoder_freedv_rx_ss</key>
+  <import>from gnuradio import vocoder</import>
+  <import>from gnuradio.vocoder import freedv_api</import>
+  <make>vocoder.freedv_rx_ss($mode,$squelch_thresh)</make>
+  <callback>set_squelch_thresh($squelch_thresh)</callback>
+  <param>
+    <name>Operating Mode</name>
+    <key>mode</key>
+    <value>freedv_api.MODE_1600</value>
+    <type>int</type>
+    <option>
+      <name>1600</name>
+      <key>freedv_api.MODE_1600</key>
+    </option>
+    <option>
+      <name>700</name>
+      <key>freedv_api.MODE_700</key>
+    </option>
+    <option>
+      <name>700B</name>
+      <key>freedv_api.MODE_700B</key>
+    </option>
+    <option>
+      <name>2400A</name>
+      <key>freedv_api.MODE_2400A</key>
+    </option>
+    <option>
+      <name>2400B</name>
+      <key>freedv_api.MODE_2400B</key>
+    </option>
+    <option>
+      <name>800XA</name>
+      <key>freedv_api.MODE_800XA</key>
+    </option>
+  </param>
+  <param>
+    <name>Squelch Threshold</name>
+    <key>squelch_thresh</key>
+    <value>-100.0</value>
+    <type>float</type>
+  </param>
+  <sink>
+    <name>in</name>
+    <type>short</type>
+  </sink>
+  <source>
+    <name>out</name>
+    <type>short</type>
+  </source>
+</block>
--- /dev/null
+++ b/gr-vocoder/grc/vocoder_freedv_tx_ss.xml
@@ -0,0 +1,57 @@
+<?xml version="1.0"?>
+<!--
+###################################################
+## FreeDV audio modem modulator
+###################################################
+ -->
+<block>
+  <name>FreeDV modulator</name>
+  <key>vocoder_freedv_tx_ss</key>
+  <import>from gnuradio import vocoder</import>
+  <import>from gnuradio.vocoder import freedv_api</import>
+  <make>vocoder.freedv_tx_ss($mode,$txt_msg)</make>
+  <param>
+    <name>Operating Mode</name>
+    <key>mode</key>
+    <value>freedv_api.MODE_1600</value>
+    <type>int</type>
+    <option>
+      <name>1600</name>
+      <key>freedv_api.MODE_1600</key>
+    </option>
+    <option>
+      <name>700</name>
+      <key>freedv_api.MODE_700</key>
+    </option>
+    <option>
+      <name>700B</name>
+      <key>freedv_api.MODE_700B</key>
+    </option>
+    <option>
+      <name>2400A</name>
+      <key>freedv_api.MODE_2400A</key>
+    </option>
+    <option>
+      <name>2400B</name>
+      <key>freedv_api.MODE_2400B</key>
+    </option>
+    <option>
+      <name>800XA</name>
+      <key>freedv_api.MODE_800XA</key>
+    </option>
+  </param>
+  <param>
+    <name>Text Message</name>
+    <key>txt_msg</key>
+    <value>'GNU Radio'</value>
+    <type>string</type>
+  </param>
+  <sink>
+    <name>in</name>
+    <type>short</type>
+  </sink>
+  <source>
+    <name>out</name>
+    <type>short</type>
+  </source>
+</block>
--- a/gr-vocoder/include/gnuradio/vocoder/CMakeLists.txt
+++ b/gr-vocoder/include/gnuradio/vocoder/CMakeLists.txt
@@ -46,6 +46,15 @@
     COMPONENT "vocoder_devel"
 )
 endif(LIBCODEC2_FOUND)
+if(LIBCODEC2_HAS_FREEDV_API)
+install(FILES
+    freedv_api.h
+    freedv_rx_ss.h
+    freedv_tx_ss.h
+    DESTINATION ${GR_INCLUDE_DIR}/gnuradio/vocoder
+    COMPONENT "vocoder_devel"
+)
+endif(LIBCODEC2_HAS_FREEDV_API)
 if(LIBGSM_FOUND)
 install(FILES
     gsm_fr_decode_ps.h
--- /dev/null
+++ b/gr-vocoder/include/gnuradio/vocoder/freedv_api.h
@@ -0,0 +1,68 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2016 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ *
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifndef _VOCODER_FREEDV_H_
+#define _VOCODER_FREEDV_H_
+
+#include <gnuradio/vocoder/api.h>
+
+extern "C" {
+#include <codec2/codec2.h>
+#include <codec2/freedv_api.h>
+#include <codec2/modem_stats.h>
+}
+
+namespace gr {
+  namespace vocoder {
+
+    class VOCODER_API freedv_api {
+    public:
+
+      enum freedv_modes {
+#ifdef FREEDV_MODE_1600
+	MODE_1600 = FREEDV_MODE_1600,
+#endif
+#ifdef FREEDV_MODE_700
+	MODE_700 = FREEDV_MODE_700,
+#endif
+#ifdef FREEDV_MODE_700B
+	MODE_700B = FREEDV_MODE_700B,
+#endif
+#ifdef FREEDV_MODE_2400A
+	MODE_2400A = FREEDV_MODE_2400A,
+#endif
+#ifdef FREEDV_MODE_2400B
+	MODE_2400B = FREEDV_MODE_2400B,
+#endif
+#ifdef FREEDV_MODE_800XA
+	MODE_800XA = FREEDV_MODE_800XA,
+#endif
+      };
+
+    private:
+
+    };
+
+  } /* namespace vocoder */
+} /* namespace gr */
+
+#endif /* _VOCODER_FREEDV_H_ */
--- /dev/null
+++ b/gr-vocoder/include/gnuradio/vocoder/freedv_rx_ss.h
@@ -0,0 +1,63 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2016 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ *
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifndef INCLUDED_VOCODER_FREEDV_RX_H
+#define INCLUDED_VOCODER_FREEDV_RX_H
+
+#include <gnuradio/vocoder/api.h>
+#include <gnuradio/vocoder/freedv_api.h>
+#include <gnuradio/block.h>
+
+namespace gr {
+  namespace vocoder {
+
+    /*!
+     * \brief FreeDV demodulator
+     * \ingroup audio_blk
+     *
+     * Input: 16-bit short values of an audio signal with sampling rate 8 kHz.
+     *
+     * Output: 16-bit short values of an audio signal with sampling rate 8 kHz.
+     *
+     * See also gr::vocoder::freedv_tx_ss.
+     */
+    class VOCODER_API freedv_rx_ss : virtual public gr::block
+    {
+    public:
+      typedef boost::shared_ptr<freedv_rx_ss> sptr;
+
+      /*!
+       * \brief Make FreeDV modem demodulator block.
+       *
+       * \param mode Operating Mode designation
+       * \param squelch_thresh FreeDV modem squelch threshold value
+       */
+      static sptr make(int mode=freedv_api::MODE_1600, float squelch_thresh=-100.0);
+
+      virtual void set_squelch_thresh(float squelch_thresh) = 0;
+      virtual float squelch_thresh() = 0;
+    };
+
+  } /* namespace vocoder */
+} /* namespace gr */
+
+#endif /* INCLUDED_VOCODER_FREEDV_RX_H */
--- /dev/null
+++ b/gr-vocoder/include/gnuradio/vocoder/freedv_tx_ss.h
@@ -0,0 +1,59 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2016 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ *
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifndef INCLUDED_VOCODER_FREEDV_TX_H
+#define INCLUDED_VOCODER_FREEDV_TX_H
+
+#include <gnuradio/vocoder/api.h>
+#include <gnuradio/vocoder/freedv_api.h>
+#include <gnuradio/sync_block.h>
+
+namespace gr {
+  namespace vocoder {
+
+    /*!
+     * \brief FreeDV modulator
+     * \ingroup audio_blk
+     *
+     * Input: Speech (audio) signal as 16-bit shorts, sampling rate 8 kHz.
+     *
+     * Output: Signal (audio) as 16-bit shorts, sampling rate 8 kHz.
+     *
+     */
+    class VOCODER_API freedv_tx_ss : virtual public gr::sync_block
+    {
+    public:
+      typedef boost::shared_ptr<freedv_tx_ss> sptr;
+
+      /*!
+       * \brief Make FreeDV Modem modulator block.
+       *
+       * \param mode Operating Mode designation
+       * \param msg_txt Low Rate message text (callsign, location)
+       */
+      static sptr make(int mode=freedv_api::MODE_1600,const std::string msg_txt="GNU Radio");
+    };
+
+  } /* namespace vocoder */
+} /* namespace gr */
+
+#endif /* INCLUDED_VOCODER_FREEDV_TX_H */
--- a/gr-vocoder/lib/CMakeLists.txt
+++ b/gr-vocoder/lib/CMakeLists.txt
@@ -56,6 +56,13 @@
     codec2_encode_sp_impl.cc
     )
 endif(LIBCODEC2_FOUND)
+if(LIBCODEC2_HAS_FREEDV_API)
+  list(APPEND gr_vocoder_sources
+    freedv_api.cc
+    freedv_rx_ss_impl.cc
+    freedv_tx_ss_impl.cc
+    )
+endif(LIBCODEC2_HAS_FREEDV_API)
 if(LIBGSM_FOUND)
   list(APPEND gr_vocoder_sources
     gsm_fr_decode_ps_impl.cc
--- /dev/null
+++ b/gr-vocoder/lib/freedv_api.cc
@@ -0,0 +1,33 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2016 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ *
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#include <gnuradio/vocoder/freedv_api.h>
+
+namespace gr {
+  namespace vocoder {
+
+  } /* namespace vocoder */
+} /* namespace gr */
--- /dev/null
+++ b/gr-vocoder/lib/freedv_rx_ss_impl.cc
@@ -0,0 +1,155 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2016 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ *
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include "freedv_rx_ss_impl.h"
+
+#include <gnuradio/io_signature.h>
+#include <stdexcept>
+#include <assert.h>
+
+extern "C" {
+    void put_next_rx_char(void *callback_state, char c) {
+      struct freedv_rx_callback_state* pstate;
+
+      pstate = (struct freedv_rx_callback_state*) callback_state;
+      if (pstate->ftxt != NULL) {
+        //fprintf(pstate->ftxt, "%c\n", c);
+      }
+      return;
+    }
+}
+
+
+namespace gr {
+  namespace vocoder {
+
+    freedv_rx_ss::sptr
+    freedv_rx_ss::make(int mode, float squelch_thresh)
+    {
+      return gnuradio::get_initial_sptr
+	(new freedv_rx_ss_impl(mode, squelch_thresh));
+    }
+
+    freedv_rx_ss_impl::freedv_rx_ss_impl (int mode, float squelch_thresh)
+      : gr::block("vocoder_freedv_rx_ss",
+	      io_signature::make(1, 1, sizeof(short)),
+	      io_signature::make(1, 1, sizeof(short))),
+	d_mode(mode), d_squelch_thresh(squelch_thresh)
+    {
+      if((d_freedv = freedv_open(mode)) == NULL)
+	throw std::runtime_error("freedv_rx_ss_impl: freedv_open failed");
+      freedv_set_snr_squelch_thresh(d_freedv, d_squelch_thresh);
+      freedv_set_squelch_en(d_freedv, 0);
+      freedv_set_callback_txt(d_freedv, put_next_rx_char, NULL, (void *) &d_cb_state);
+      d_speech_samples = freedv_get_n_speech_samples(d_freedv);
+      d_max_modem_samples = freedv_get_n_max_modem_samples(d_freedv);
+      d_nin = freedv_nin(d_freedv);
+      //set_output_multiple(d_max_modem_samples);
+    }
+
+    freedv_rx_ss_impl::~freedv_rx_ss_impl()
+    {
+      int total_bits;
+      int total_bit_errors;
+
+      if (freedv_get_test_frames(d_freedv)) {
+        total_bits = freedv_get_total_bits(d_freedv);
+        total_bit_errors = freedv_get_total_bit_errors(d_freedv);
+        fprintf(stderr, "bits: %d errors: %d BER: %3.2f\n", total_bits, total_bit_errors, (1.0*total_bit_errors)/total_bits);
+      }
+      freedv_close(d_freedv);
+    }
+
+    void
+    freedv_rx_ss_impl::forecast(int noutput_items,
+				gr_vector_int &ninput_items_required)
+    {
+      unsigned ninputs = ninput_items_required.size();
+      for(unsigned i = 0; i < ninputs; i++)
+	ninput_items_required[i] = noutput_items;
+    }
+
+    int
+    freedv_rx_ss_impl::general_work(int noutput_items,
+				    gr_vector_int &ninput_items,
+				    gr_vector_const_void_star &input_items,
+				    gr_vector_void_star &output_items)
+    {
+      short *in = (short *) input_items[0];
+      short *out = (short *) output_items[0];
+      int i,n;
+
+      d_nin = freedv_nin(d_freedv);
+      if (ninput_items[0] < d_nin) {
+	consume_each(0);
+	return(0);
+      }
+      for (i=0,n=0; ((n+d_nin) <= noutput_items)&&(i <= ninput_items[0]);) {
+	d_nout = freedv_rx(d_freedv, out, in);
+	i += d_nin;
+	n += d_nout;
+	out = &(out[d_nout]);
+	in = &(in[d_nin]);
+	d_nin = freedv_nin(d_freedv);
+      }
+      if ((i > ninput_items[0])||((n+d_nin) > noutput_items)) {
+	i -= d_nin;
+	n -= d_nout;
+      } // back up to where we left off processing freedv_rx
+
+      freedv_get_modem_stats(d_freedv, &d_sync, &d_snr_est);
+      freedv_get_modem_extended_stats(d_freedv, &d_stats);
+      d_total_bit_errors = freedv_get_total_bit_errors(d_freedv);
+
+      consume_each(i);
+      return(n);
+    }
+
+    void put_next_rx_proto(void *callback_state,char *proto_bits) {
+      return;
+    }
+
+    void datarx(void *callback_state, unsigned char *packet, size_t size) {
+      return;
+    }
+
+    void datatx(void *callback_state, unsigned char *packet, size_t *size) {
+      return;
+    }
+
+    void freedv_rx_ss_impl::set_squelch_thresh(float squelch_thresh)
+    {
+      gr::thread::scoped_lock l(d_setlock);
+      d_squelch_thresh = squelch_thresh;
+      freedv_set_snr_squelch_thresh(d_freedv, d_squelch_thresh);
+    }
+
+    float freedv_rx_ss_impl::squelch_thresh() {
+      return(d_squelch_thresh);
+    }
+
+  } /* namespace vocoder */
+} /* namespace gr */
--- /dev/null
+++ b/gr-vocoder/lib/freedv_rx_ss_impl.h
@@ -0,0 +1,81 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2016 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ *
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifndef INCLUDED_VOCODER_FREEDV_RX_SS_IMPL_H
+#define INCLUDED_VOCODER_FREEDV_RX_SS_IMPL_H
+
+#include <gnuradio/vocoder/freedv_rx_ss.h>
+
+extern "C" {
+  struct freedv_rx_callback_state {
+    FILE *ftxt;
+  };
+  static void put_next_rx_char(void *callback_state, char c);
+  void put_next_rx_proto(void *callback_state,char *proto_bits);
+  void datarx(void *callback_state, unsigned char *packet, size_t size);
+  void datatx(void *callback_state, unsigned char *packet, size_t *size);
+}
+
+namespace gr {
+  namespace vocoder {
+
+    class freedv_rx_ss_impl : public freedv_rx_ss
+    {
+    private:
+      short *d_speech_out;
+      short *d_demod_in;
+      struct freedv *d_freedv;
+      int d_nin, d_nout, d_frame;
+      struct freedv_rx_callback_state d_cb_state;
+      struct MODEM_STATS d_stats;
+      int d_mode;
+      int d_sync;
+      int d_total_bits;
+      int d_total_bit_errors;
+      float d_snr_est;
+      float d_squelch_thresh;
+      int d_speech_samples;
+      int d_max_modem_samples;
+      float d_clock_offset;
+      int d_use_codecrx;
+      struct CODEC2 *d_c2 = NULL;
+
+    public:
+      freedv_rx_ss_impl(int mode, float squelch_thresh);
+      ~freedv_rx_ss_impl();
+
+      void set_squelch_thresh(float squelch_thresh);
+      float squelch_thresh();
+
+      // Where all the action really happens
+      void forecast(int noutput_items, gr_vector_int &ninput_items_required);
+
+      int general_work(int noutput_items,
+		       gr_vector_int &ninput_items,
+		       gr_vector_const_void_star &input_items,
+		       gr_vector_void_star &output_items);
+    };
+
+  } /* namespace vocoder */
+} /* namespace gr */
+
+#endif /* INCLUDED_VOCODER_FREEDV_RX_SS_IMPL_H */
--- /dev/null
+++ b/gr-vocoder/lib/freedv_tx_ss_impl.cc
@@ -0,0 +1,98 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2016 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ *
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include "freedv_tx_ss_impl.h"
+
+#include <gnuradio/io_signature.h>
+#include <stdexcept>
+#include <iostream>
+#include <iomanip>
+
+extern "C" {
+  char
+  get_next_tx_char(void *callback_state)
+  {
+    char c;
+    struct freedv_tx_callback_state* pstate;
+
+    pstate = (struct freedv_tx_callback_state*)callback_state;
+    c = *pstate->ptx_str++;
+
+    if (*pstate->ptx_str == 0) {
+      pstate->ptx_str = pstate->tx_str;
+      c = 0x0d; // FreeDV uses Carriage Return termination
+    }
+
+    return c;
+  }
+}
+
+namespace gr {
+  namespace vocoder {
+
+    freedv_tx_ss::sptr
+    freedv_tx_ss::make(int mode, const std::string msg_txt)
+    {
+      return gnuradio::get_initial_sptr
+	(new freedv_tx_ss_impl(mode, msg_txt));
+    }
+
+    freedv_tx_ss_impl::freedv_tx_ss_impl(int mode, const std::string msg_txt)
+      : sync_block("vocoder_freedv_tx_ss",
+		   io_signature::make(1, 1, sizeof(short)),
+		   io_signature::make(1, 1, sizeof(short))),
+	d_mode(mode), d_msg_text(msg_txt)
+    {
+      if((d_freedv = freedv_open(mode)) == NULL)
+	throw std::runtime_error("freedv_tx_ss_impl: freedv_open failed");
+      snprintf(d_cb_state.tx_str,79,"%s",d_msg_text.c_str());
+      d_cb_state.ptx_str = d_cb_state.tx_str;
+      freedv_set_callback_txt(d_freedv, NULL, get_next_tx_char, (void *) &d_cb_state);
+      d_nom_modem_samples = freedv_get_n_nom_modem_samples(d_freedv);
+      set_output_multiple(d_nom_modem_samples);
+    }
+
+    freedv_tx_ss_impl::~freedv_tx_ss_impl()
+    {
+      freedv_close(d_freedv);
+    }
+
+    int
+    freedv_tx_ss_impl::work(int noutput_items,
+			    gr_vector_const_void_star &input_items,
+			    gr_vector_void_star &output_items)
+    {
+      short *in = (short*)input_items[0];
+      short *out = (short*)output_items[0];
+      int i;
+
+      for(i=0;i<(noutput_items/d_nom_modem_samples);i++)
+	freedv_tx(d_freedv, &(out[i*d_nom_modem_samples]), &(in[i*d_nom_modem_samples]));
+      return noutput_items;
+    }
+
+  } /* namespace vocoder */
+} /* namespace gr */
--- /dev/null
+++ b/gr-vocoder/lib/freedv_tx_ss_impl.h
@@ -0,0 +1,72 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2016 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ *
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifndef INCLUDED_VOCODER_FREEDV_TX_SS_IMPL_H
+#define INCLUDED_VOCODER_FREEDV_TX_SS_IMPL_H
+
+#include <gnuradio/vocoder/freedv_tx_ss.h>
+
+extern "C" {
+  struct freedv_tx_callback_state {
+    char  tx_str[80];
+    char *ptx_str;
+    int calls;
+  };
+  char get_next_tx_char(void *callback_state);
+  void get_next_proto(void *callback_state,char *proto_bits);
+  void datarx(void *callback_state, unsigned char *packet, size_t size);
+  void datatx(void *callback_state, unsigned char *packet, size_t *size);
+}
+
+namespace gr {
+  namespace vocoder {
+
+    class freedv_tx_ss_impl : public freedv_tx_ss
+    {
+    private:
+      short *d_speech_in;
+      short *d_mod_out;
+      struct freedv_tx_callback_state d_cb_state;
+      struct freedv *d_freedv;
+      int d_mode;
+      float d_squelch_thresh;
+      int d_speech_samples;
+      int d_nom_modem_samples;
+      int d_use_codectx;
+      int d_use_datatx;
+      std::string d_msg_text;
+      struct CODEC2 *d_c2;
+
+    public:
+      freedv_tx_ss_impl(int mode, const std::string txt_msg);
+      ~freedv_tx_ss_impl();
+
+      // Where all the action really happens
+      int work(int noutput_items,
+	       gr_vector_const_void_star &input_items,
+	       gr_vector_void_star &output_items);
+    };
+
+  } /* namespace vocoder */
+} /* namespace gr */
+
+#endif /* INCLUDED_VOCODER_FREEDV_TX_SS_IMPL_H */
--- a/gr-vocoder/swig/CMakeLists.txt
+++ b/gr-vocoder/swig/CMakeLists.txt
@@ -37,6 +37,10 @@
   list(APPEND GR_SWIG_FLAGS "-DLIBCODEC2_FOUND")
 endif(LIBCODEC2_FOUND)
 
+if(LIBCODEC2_HAS_FREEDV_API)
+  list(APPEND GR_SWIG_FLAGS "-DLIBCODEC2_HAS_FREEDV_API")
+endif(LIBCODEC2_HAS_FREEDV_API)
+
 if(LIBGSM_FOUND)
   list(APPEND GR_SWIG_FLAGS "-DLIBGSM_FOUND")
 endif(LIBGSM_FOUND)
--- a/gr-vocoder/swig/vocoder_swig.i
+++ b/gr-vocoder/swig/vocoder_swig.i
@@ -85,6 +85,25 @@
 GR_SWIG_BLOCK_MAGIC2(vocoder, codec2_encode_sp);
 #endif
 
+#ifdef LIBCODEC2_HAS_FREEDV_API
+%{
+#include <codec2/freedv_api.h>
+#include "gnuradio/vocoder/freedv_api.h"
+#include "gnuradio/vocoder/freedv_rx_ss.h"
+#include "gnuradio/vocoder/freedv_tx_ss.h"
+%}
+
+%ignore freedv_set_smooth_symbols;
+%ignore freedv_set_clip;
+%include <codec2/freedv_api.h>
+%include "gnuradio/vocoder/freedv_api.h"
+%include "gnuradio/vocoder/freedv_rx_ss.h"
+%include "gnuradio/vocoder/freedv_tx_ss.h"
+
+GR_SWIG_BLOCK_MAGIC2(vocoder, freedv_rx_ss);
+GR_SWIG_BLOCK_MAGIC2(vocoder, freedv_tx_ss);
+#endif
+
 #ifdef LIBGSM_FOUND
 %{
 #include "gnuradio/vocoder/gsm_fr_decode_ps.h"

From 004c290a734ca22f57eaca5c6d73dd204ebbd976 Mon Sep 17 00:00:00 2001
From: "A. Maitland Bottoms" <bottoms@debian.org>
Date: Thu, 15 Sep 2016 15:12:16 -0400
Subject: [PATCH 15/27] provide example grfreedv.grc flowgraph

---
 gr-vocoder/examples/CMakeLists.txt |   1 +
 gr-vocoder/examples/grfreedv.grc   | 616 +++++++++++++++++++++++++++++++++++++
 2 files changed, 617 insertions(+)
 create mode 100644 gr-vocoder/examples/grfreedv.grc

--- a/gr-vocoder/examples/CMakeLists.txt
+++ b/gr-vocoder/examples/CMakeLists.txt
@@ -37,6 +37,7 @@
   GR_PYTHON_INSTALL(
     PROGRAMS
     codec2_audio_loopback.py
+    grfreedv.grc
     DESTINATION ${GR_PKG_VOCODER_EXAMPLES_DIR}
     COMPONENT "vocoder_examples"
     )
--- /dev/null
+++ b/gr-vocoder/examples/grfreedv.grc
@@ -0,0 +1,616 @@
+<?xml version='1.0' encoding='utf-8'?>
+<?grc format='1' created='3.7.9'?>
+<flow_graph>
+  <timestamp>Wed Jun 29 19:22:27 2016</timestamp>
+  <block>
+    <key>options</key>
+    <param>
+      <key>author</key>
+      <value>A. MAitland Bottoms</value>
+    </param>
+    <param>
+      <key>window_size</key>
+      <value></value>
+    </param>
+    <param>
+      <key>category</key>
+      <value>Custom</value>
+    </param>
+    <param>
+      <key>comment</key>
+      <value></value>
+    </param>
+    <param>
+      <key>description</key>
+      <value>A FreeDV Modulator</value>
+    </param>
+    <param>
+      <key>_enabled</key>
+      <value>True</value>
+    </param>
+    <param>
+      <key>_coordinate</key>
+      <value>(8, 8)</value>
+    </param>
+    <param>
+      <key>_rotation</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>generate_options</key>
+      <value>qt_gui</value>
+    </param>
+    <param>
+      <key>hier_block_src_path</key>
+      <value>.:</value>
+    </param>
+    <param>
+      <key>id</key>
+      <value>grfreedv</value>
+    </param>
+    <param>
+      <key>max_nouts</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>qt_qss_theme</key>
+      <value></value>
+    </param>
+    <param>
+      <key>realtime_scheduling</key>
+      <value></value>
+    </param>
+    <param>
+      <key>run_command</key>
+      <value>{python} -u {filename}</value>
+    </param>
+    <param>
+      <key>run_options</key>
+      <value>prompt</value>
+    </param>
+    <param>
+      <key>run</key>
+      <value>True</value>
+    </param>
+    <param>
+      <key>thread_safe_setters</key>
+      <value></value>
+    </param>
+    <param>
+      <key>title</key>
+      <value>GNU Radio FreeDV</value>
+    </param>
+  </block>
+  <block>
+    <key>variable</key>
+    <param>
+      <key>comment</key>
+      <value></value>
+    </param>
+    <param>
+      <key>_enabled</key>
+      <value>True</value>
+    </param>
+    <param>
+      <key>_coordinate</key>
+      <value>(8, 160)</value>
+    </param>
+    <param>
+      <key>_rotation</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>id</key>
+      <value>samp_rate</value>
+    </param>
+    <param>
+      <key>value</key>
+      <value>8000</value>
+    </param>
+  </block>
+  <block>
+    <key>variable_qtgui_range</key>
+    <param>
+      <key>comment</key>
+      <value></value>
+    </param>
+    <param>
+      <key>value</key>
+      <value>-120</value>
+    </param>
+    <param>
+      <key>_enabled</key>
+      <value>True</value>
+    </param>
+    <param>
+      <key>_coordinate</key>
+      <value>(232, 16)</value>
+    </param>
+    <param>
+      <key>gui_hint</key>
+      <value></value>
+    </param>
+    <param>
+      <key>_rotation</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>id</key>
+      <value>squelch</value>
+    </param>
+    <param>
+      <key>label</key>
+      <value>squelch slider</value>
+    </param>
+    <param>
+      <key>min_len</key>
+      <value>256</value>
+    </param>
+    <param>
+      <key>orient</key>
+      <value>Qt.Horizontal</value>
+    </param>
+    <param>
+      <key>start</key>
+      <value>-127</value>
+    </param>
+    <param>
+      <key>step</key>
+      <value>1</value>
+    </param>
+    <param>
+      <key>stop</key>
+      <value>128</value>
+    </param>
+    <param>
+      <key>rangeType</key>
+      <value>float</value>
+    </param>
+    <param>
+      <key>widget</key>
+      <value>counter_slider</value>
+    </param>
+  </block>
+  <block>
+    <key>audio_sink</key>
+    <param>
+      <key>alias</key>
+      <value></value>
+    </param>
+    <param>
+      <key>comment</key>
+      <value></value>
+    </param>
+    <param>
+      <key>affinity</key>
+      <value></value>
+    </param>
+    <param>
+      <key>device_name</key>
+      <value></value>
+    </param>
+    <param>
+      <key>_enabled</key>
+      <value>True</value>
+    </param>
+    <param>
+      <key>_coordinate</key>
+      <value>(920, 228)</value>
+    </param>
+    <param>
+      <key>_rotation</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>id</key>
+      <value>audio_sink_0</value>
+    </param>
+    <param>
+      <key>num_inputs</key>
+      <value>1</value>
+    </param>
+    <param>
+      <key>ok_to_block</key>
+      <value>True</value>
+    </param>
+    <param>
+      <key>samp_rate</key>
+      <value>samp_rate</value>
+    </param>
+  </block>
+  <block>
+    <key>audio_source</key>
+    <param>
+      <key>alias</key>
+      <value></value>
+    </param>
+    <param>
+      <key>comment</key>
+      <value></value>
+    </param>
+    <param>
+      <key>affinity</key>
+      <value></value>
+    </param>
+    <param>
+      <key>device_name</key>
+      <value>hw:2,0</value>
+    </param>
+    <param>
+      <key>_enabled</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>_coordinate</key>
+      <value>(16, 325)</value>
+    </param>
+    <param>
+      <key>_rotation</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>id</key>
+      <value>audio_source_0</value>
+    </param>
+    <param>
+      <key>maxoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>minoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>num_outputs</key>
+      <value>1</value>
+    </param>
+    <param>
+      <key>ok_to_block</key>
+      <value>True</value>
+    </param>
+    <param>
+      <key>samp_rate</key>
+      <value>48000</value>
+    </param>
+  </block>
+  <block>
+    <key>blocks_float_to_short</key>
+    <param>
+      <key>alias</key>
+      <value></value>
+    </param>
+    <param>
+      <key>comment</key>
+      <value></value>
+    </param>
+    <param>
+      <key>affinity</key>
+      <value></value>
+    </param>
+    <param>
+      <key>_enabled</key>
+      <value>1</value>
+    </param>
+    <param>
+      <key>_coordinate</key>
+      <value>(256, 228)</value>
+    </param>
+    <param>
+      <key>_rotation</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>id</key>
+      <value>blocks_float_to_short_0</value>
+    </param>
+    <param>
+      <key>maxoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>minoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>scale</key>
+      <value>32768</value>
+    </param>
+    <param>
+      <key>vlen</key>
+      <value>1</value>
+    </param>
+  </block>
+  <block>
+    <key>blocks_short_to_float</key>
+    <param>
+      <key>alias</key>
+      <value></value>
+    </param>
+    <param>
+      <key>comment</key>
+      <value></value>
+    </param>
+    <param>
+      <key>affinity</key>
+      <value></value>
+    </param>
+    <param>
+      <key>_enabled</key>
+      <value>1</value>
+    </param>
+    <param>
+      <key>_coordinate</key>
+      <value>(736, 228)</value>
+    </param>
+    <param>
+      <key>_rotation</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>id</key>
+      <value>blocks_short_to_float_0</value>
+    </param>
+    <param>
+      <key>maxoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>minoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>scale</key>
+      <value>32768</value>
+    </param>
+    <param>
+      <key>vlen</key>
+      <value>1</value>
+    </param>
+  </block>
+  <block>
+    <key>blocks_wavfile_source</key>
+    <param>
+      <key>alias</key>
+      <value></value>
+    </param>
+    <param>
+      <key>comment</key>
+      <value></value>
+    </param>
+    <param>
+      <key>affinity</key>
+      <value></value>
+    </param>
+    <param>
+      <key>_enabled</key>
+      <value>1</value>
+    </param>
+    <param>
+      <key>file</key>
+      <value>/usr/share/codec2/wav/all.wav</value>
+    </param>
+    <param>
+      <key>_coordinate</key>
+      <value>(24, 221)</value>
+    </param>
+    <param>
+      <key>_rotation</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>id</key>
+      <value>blocks_wavfile_source_0</value>
+    </param>
+    <param>
+      <key>maxoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>minoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>nchan</key>
+      <value>1</value>
+    </param>
+    <param>
+      <key>repeat</key>
+      <value>True</value>
+    </param>
+  </block>
+  <block>
+    <key>rational_resampler_xxx</key>
+    <param>
+      <key>alias</key>
+      <value></value>
+    </param>
+    <param>
+      <key>comment</key>
+      <value></value>
+    </param>
+    <param>
+      <key>affinity</key>
+      <value></value>
+    </param>
+    <param>
+      <key>decim</key>
+      <value>6</value>
+    </param>
+    <param>
+      <key>_enabled</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>fbw</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>_coordinate</key>
+      <value>(216, 303)</value>
+    </param>
+    <param>
+      <key>_rotation</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>id</key>
+      <value>rational_resampler_xxx_0</value>
+    </param>
+    <param>
+      <key>interp</key>
+      <value>1</value>
+    </param>
+    <param>
+      <key>maxoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>minoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>taps</key>
+      <value></value>
+    </param>
+    <param>
+      <key>type</key>
+      <value>fff</value>
+    </param>
+  </block>
+  <block>
+    <key>vocoder_freedv_rx_ss</key>
+    <param>
+      <key>alias</key>
+      <value></value>
+    </param>
+    <param>
+      <key>comment</key>
+      <value></value>
+    </param>
+    <param>
+      <key>affinity</key>
+      <value></value>
+    </param>
+    <param>
+      <key>_enabled</key>
+      <value>1</value>
+    </param>
+    <param>
+      <key>_coordinate</key>
+      <value>(576, 325)</value>
+    </param>
+    <param>
+      <key>_rotation</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>id</key>
+      <value>vocoder_freedv_rx_ss_0</value>
+    </param>
+    <param>
+      <key>maxoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>minoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>mode</key>
+      <value>freedv_api.MODE_1600</value>
+    </param>
+    <param>
+      <key>squelch_thresh</key>
+      <value>squelch</value>
+    </param>
+  </block>
+  <block>
+    <key>vocoder_freedv_tx_ss</key>
+    <param>
+      <key>alias</key>
+      <value></value>
+    </param>
+    <param>
+      <key>comment</key>
+      <value></value>
+    </param>
+    <param>
+      <key>affinity</key>
+      <value></value>
+    </param>
+    <param>
+      <key>_enabled</key>
+      <value>1</value>
+    </param>
+    <param>
+      <key>_coordinate</key>
+      <value>(424, 221)</value>
+    </param>
+    <param>
+      <key>_rotation</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>id</key>
+      <value>vocoder_freedv_tx_ss_0</value>
+    </param>
+    <param>
+      <key>maxoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>minoutbuf</key>
+      <value>0</value>
+    </param>
+    <param>
+      <key>mode</key>
+      <value>freedv_api.MODE_1600</value>
+    </param>
+    <param>
+      <key>txt_msg</key>
+      <value>'GNU Radio'</value>
+    </param>
+  </block>
+  <connection>
+    <source_block_id>audio_source_0</source_block_id>
+    <sink_block_id>rational_resampler_xxx_0</sink_block_id>
+    <source_key>0</source_key>
+    <sink_key>0</sink_key>
+  </connection>
+  <connection>
+    <source_block_id>blocks_float_to_short_0</source_block_id>
+    <sink_block_id>vocoder_freedv_tx_ss_0</sink_block_id>
+    <source_key>0</source_key>
+    <sink_key>0</sink_key>
+  </connection>
+  <connection>
+    <source_block_id>blocks_short_to_float_0</source_block_id>
+    <sink_block_id>audio_sink_0</sink_block_id>
+    <source_key>0</source_key>
+    <sink_key>0</sink_key>
+  </connection>
+  <connection>
+    <source_block_id>blocks_wavfile_source_0</source_block_id>
+    <sink_block_id>blocks_float_to_short_0</sink_block_id>
+    <source_key>0</source_key>
+    <sink_key>0</sink_key>
+  </connection>
+  <connection>
+    <source_block_id>rational_resampler_xxx_0</source_block_id>
+    <sink_block_id>blocks_float_to_short_0</sink_block_id>
+    <source_key>0</source_key>
+    <sink_key>0</sink_key>
+  </connection>
+  <connection>
+    <source_block_id>vocoder_freedv_rx_ss_0</source_block_id>
+    <sink_block_id>blocks_short_to_float_0</sink_block_id>
+    <source_key>0</source_key>
+    <sink_key>0</sink_key>
+  </connection>
+  <connection>
+    <source_block_id>vocoder_freedv_tx_ss_0</source_block_id>
+    <sink_block_id>vocoder_freedv_rx_ss_0</sink_block_id>
+    <source_key>0</source_key>
+    <sink_key>0</sink_key>
+  </connection>
+</flow_graph>

From d56f5f4285e4313b012fb03549289144bb424493 Mon Sep 17 00:00:00 2001
From: Clayton Smith <argilo@gmail.com>
Date: Fri, 16 Sep 2016 12:00:16 -0600
Subject: [PATCH 16/27] Convert tabs to spaces.

---
 gr-vocoder/include/gnuradio/vocoder/freedv_api.h | 12 +++----
 gr-vocoder/lib/freedv_rx_ss_impl.cc              | 40 ++++++++++++------------
 gr-vocoder/lib/freedv_rx_ss_impl.h               |  6 ++--
 gr-vocoder/lib/freedv_tx_ss_impl.cc              | 16 +++++-----
 gr-vocoder/lib/freedv_tx_ss_impl.h               |  4 +--
 5 files changed, 39 insertions(+), 39 deletions(-)

diff --git a/gr-vocoder/include/gnuradio/vocoder/freedv_api.h b/gr-vocoder/include/gnuradio/vocoder/freedv_api.h
index 52fbc63492..230da4e108 100644
--- a/gr-vocoder/include/gnuradio/vocoder/freedv_api.h
+++ b/gr-vocoder/include/gnuradio/vocoder/freedv_api.h
@@ -39,22 +39,22 @@ namespace gr {
 
       enum freedv_modes {
 #ifdef FREEDV_MODE_1600
-	MODE_1600 = FREEDV_MODE_1600,
+        MODE_1600 = FREEDV_MODE_1600,
 #endif
 #ifdef FREEDV_MODE_700
-	MODE_700 = FREEDV_MODE_700,
+        MODE_700 = FREEDV_MODE_700,
 #endif
 #ifdef FREEDV_MODE_700B
-	MODE_700B = FREEDV_MODE_700B,
+        MODE_700B = FREEDV_MODE_700B,
 #endif
 #ifdef FREEDV_MODE_2400A
-	MODE_2400A = FREEDV_MODE_2400A,
+        MODE_2400A = FREEDV_MODE_2400A,
 #endif
 #ifdef FREEDV_MODE_2400B
-	MODE_2400B = FREEDV_MODE_2400B,
+        MODE_2400B = FREEDV_MODE_2400B,
 #endif
 #ifdef FREEDV_MODE_800XA
-	MODE_800XA = FREEDV_MODE_800XA,
+        MODE_800XA = FREEDV_MODE_800XA,
 #endif
       };
 
diff --git a/gr-vocoder/lib/freedv_rx_ss_impl.cc b/gr-vocoder/lib/freedv_rx_ss_impl.cc
index 6cb52effa2..06a896733d 100644
--- a/gr-vocoder/lib/freedv_rx_ss_impl.cc
+++ b/gr-vocoder/lib/freedv_rx_ss_impl.cc
@@ -50,17 +50,17 @@ namespace gr {
     freedv_rx_ss::make(int mode, float squelch_thresh)
     {
       return gnuradio::get_initial_sptr
-	(new freedv_rx_ss_impl(mode, squelch_thresh));
+        (new freedv_rx_ss_impl(mode, squelch_thresh));
     }
 
     freedv_rx_ss_impl::freedv_rx_ss_impl (int mode, float squelch_thresh)
       : gr::block("vocoder_freedv_rx_ss",
-	      io_signature::make(1, 1, sizeof(short)),
-	      io_signature::make(1, 1, sizeof(short))),
-	d_mode(mode), d_squelch_thresh(squelch_thresh)
+              io_signature::make(1, 1, sizeof(short)),
+              io_signature::make(1, 1, sizeof(short))),
+        d_mode(mode), d_squelch_thresh(squelch_thresh)
     {
       if((d_freedv = freedv_open(mode)) == NULL)
-	throw std::runtime_error("freedv_rx_ss_impl: freedv_open failed");
+        throw std::runtime_error("freedv_rx_ss_impl: freedv_open failed");
       freedv_set_snr_squelch_thresh(d_freedv, d_squelch_thresh);
       freedv_set_squelch_en(d_freedv, 0);
       freedv_set_callback_txt(d_freedv, put_next_rx_char, NULL, (void *) &d_cb_state);
@@ -85,18 +85,18 @@ namespace gr {
 
     void
     freedv_rx_ss_impl::forecast(int noutput_items,
-				gr_vector_int &ninput_items_required)
+                                gr_vector_int &ninput_items_required)
     {
       unsigned ninputs = ninput_items_required.size();
       for(unsigned i = 0; i < ninputs; i++)
-	ninput_items_required[i] = noutput_items;
+        ninput_items_required[i] = noutput_items;
     }
 
     int
     freedv_rx_ss_impl::general_work(int noutput_items,
-				    gr_vector_int &ninput_items,
-				    gr_vector_const_void_star &input_items,
-				    gr_vector_void_star &output_items)
+                                    gr_vector_int &ninput_items,
+                                    gr_vector_const_void_star &input_items,
+                                    gr_vector_void_star &output_items)
     {
       short *in = (short *) input_items[0];
       short *out = (short *) output_items[0];
@@ -104,20 +104,20 @@ namespace gr {
 
       d_nin = freedv_nin(d_freedv);
       if (ninput_items[0] < d_nin) {
-	consume_each(0);
-	return(0);
+        consume_each(0);
+        return(0);
       }
       for (i=0,n=0; ((n+d_nin) <= noutput_items)&&(i <= ninput_items[0]);) {
-	d_nout = freedv_rx(d_freedv, out, in);
-	i += d_nin;
-	n += d_nout;
-	out = &(out[d_nout]);
-	in = &(in[d_nin]);
-	d_nin = freedv_nin(d_freedv);
+        d_nout = freedv_rx(d_freedv, out, in);
+        i += d_nin;
+        n += d_nout;
+        out = &(out[d_nout]);
+        in = &(in[d_nin]);
+        d_nin = freedv_nin(d_freedv);
       }
       if ((i > ninput_items[0])||((n+d_nin) > noutput_items)) {
-	i -= d_nin;
-	n -= d_nout;
+        i -= d_nin;
+        n -= d_nout;
       } // back up to where we left off processing freedv_rx
 
       freedv_get_modem_stats(d_freedv, &d_sync, &d_snr_est);
diff --git a/gr-vocoder/lib/freedv_rx_ss_impl.h b/gr-vocoder/lib/freedv_rx_ss_impl.h
index 911355b038..acc49d9d82 100644
--- a/gr-vocoder/lib/freedv_rx_ss_impl.h
+++ b/gr-vocoder/lib/freedv_rx_ss_impl.h
@@ -70,9 +70,9 @@ namespace gr {
       void forecast(int noutput_items, gr_vector_int &ninput_items_required);
 
       int general_work(int noutput_items,
-		       gr_vector_int &ninput_items,
-		       gr_vector_const_void_star &input_items,
-		       gr_vector_void_star &output_items);
+                       gr_vector_int &ninput_items,
+                       gr_vector_const_void_star &input_items,
+                       gr_vector_void_star &output_items);
     };
 
   } /* namespace vocoder */
diff --git a/gr-vocoder/lib/freedv_tx_ss_impl.cc b/gr-vocoder/lib/freedv_tx_ss_impl.cc
index d8cf04df43..a375510050 100644
--- a/gr-vocoder/lib/freedv_tx_ss_impl.cc
+++ b/gr-vocoder/lib/freedv_tx_ss_impl.cc
@@ -57,17 +57,17 @@ namespace gr {
     freedv_tx_ss::make(int mode, const std::string msg_txt)
     {
       return gnuradio::get_initial_sptr
-	(new freedv_tx_ss_impl(mode, msg_txt));
+        (new freedv_tx_ss_impl(mode, msg_txt));
     }
 
     freedv_tx_ss_impl::freedv_tx_ss_impl(int mode, const std::string msg_txt)
       : sync_block("vocoder_freedv_tx_ss",
-		   io_signature::make(1, 1, sizeof(short)),
-		   io_signature::make(1, 1, sizeof(short))),
-	d_mode(mode), d_msg_text(msg_txt)
+                   io_signature::make(1, 1, sizeof(short)),
+                   io_signature::make(1, 1, sizeof(short))),
+        d_mode(mode), d_msg_text(msg_txt)
     {
       if((d_freedv = freedv_open(mode)) == NULL)
-	throw std::runtime_error("freedv_tx_ss_impl: freedv_open failed");
+        throw std::runtime_error("freedv_tx_ss_impl: freedv_open failed");
       snprintf(d_cb_state.tx_str,79,"%s",d_msg_text.c_str());
       d_cb_state.ptx_str = d_cb_state.tx_str;
       freedv_set_callback_txt(d_freedv, NULL, get_next_tx_char, (void *) &d_cb_state);
@@ -82,15 +82,15 @@ namespace gr {
 
     int
     freedv_tx_ss_impl::work(int noutput_items,
-			    gr_vector_const_void_star &input_items,
-			    gr_vector_void_star &output_items)
+                            gr_vector_const_void_star &input_items,
+                            gr_vector_void_star &output_items)
     {
       short *in = (short*)input_items[0];
       short *out = (short*)output_items[0];
       int i;
 
       for(i=0;i<(noutput_items/d_nom_modem_samples);i++)
-	freedv_tx(d_freedv, &(out[i*d_nom_modem_samples]), &(in[i*d_nom_modem_samples]));
+        freedv_tx(d_freedv, &(out[i*d_nom_modem_samples]), &(in[i*d_nom_modem_samples]));
       return noutput_items;
     }
 
diff --git a/gr-vocoder/lib/freedv_tx_ss_impl.h b/gr-vocoder/lib/freedv_tx_ss_impl.h
index 4a24d3b281..a023b67f5b 100644
--- a/gr-vocoder/lib/freedv_tx_ss_impl.h
+++ b/gr-vocoder/lib/freedv_tx_ss_impl.h
@@ -62,8 +62,8 @@ namespace gr {
 
       // Where all the action really happens
       int work(int noutput_items,
-	       gr_vector_const_void_star &input_items,
-	       gr_vector_void_star &output_items);
+               gr_vector_const_void_star &input_items,
+               gr_vector_void_star &output_items);
     };
 
   } /* namespace vocoder */
-- 
2.11.0


From 8a6e11ce8081058888eccfa1f419fefa41ba3024 Mon Sep 17 00:00:00 2001
From: Clayton Smith <argilo@gmail.com>
Date: Fri, 16 Sep 2016 14:33:46 -0600
Subject: [PATCH 17/27] Get the FreeDV demodulator working.

---
 gr-vocoder/lib/freedv_rx_ss_impl.cc | 31 +++++++++++--------------------
 1 file changed, 11 insertions(+), 20 deletions(-)

diff --git a/gr-vocoder/lib/freedv_rx_ss_impl.cc b/gr-vocoder/lib/freedv_rx_ss_impl.cc
index 06a896733d..748a5c10aa 100644
--- a/gr-vocoder/lib/freedv_rx_ss_impl.cc
+++ b/gr-vocoder/lib/freedv_rx_ss_impl.cc
@@ -67,7 +67,7 @@ namespace gr {
       d_speech_samples = freedv_get_n_speech_samples(d_freedv);
       d_max_modem_samples = freedv_get_n_max_modem_samples(d_freedv);
       d_nin = freedv_nin(d_freedv);
-      //set_output_multiple(d_max_modem_samples);
+      set_output_multiple(d_max_modem_samples);
     }
 
     freedv_rx_ss_impl::~freedv_rx_ss_impl()
@@ -89,7 +89,7 @@ namespace gr {
     {
       unsigned ninputs = ninput_items_required.size();
       for(unsigned i = 0; i < ninputs; i++)
-        ninput_items_required[i] = noutput_items;
+        ninput_items_required[i] = std::max(d_nin, noutput_items);
     }
 
     int
@@ -100,32 +100,23 @@ namespace gr {
     {
       short *in = (short *) input_items[0];
       short *out = (short *) output_items[0];
-      int i,n;
 
-      d_nin = freedv_nin(d_freedv);
-      if (ninput_items[0] < d_nin) {
-        consume_each(0);
-        return(0);
-      }
-      for (i=0,n=0; ((n+d_nin) <= noutput_items)&&(i <= ninput_items[0]);) {
-        d_nout = freedv_rx(d_freedv, out, in);
-        i += d_nin;
-        n += d_nout;
-        out = &(out[d_nout]);
-        in = &(in[d_nin]);
+      int in_offset = 0, out_offset = 0;
+
+      while ((noutput_items - out_offset) >= d_max_modem_samples
+              && (ninput_items[0] - in_offset) >= d_nin) {
+        d_nout = freedv_rx(d_freedv, out + out_offset, in + in_offset);
+        out_offset += d_nout;
+        in_offset += d_nin;
         d_nin = freedv_nin(d_freedv);
       }
-      if ((i > ninput_items[0])||((n+d_nin) > noutput_items)) {
-        i -= d_nin;
-        n -= d_nout;
-      } // back up to where we left off processing freedv_rx
 
       freedv_get_modem_stats(d_freedv, &d_sync, &d_snr_est);
       freedv_get_modem_extended_stats(d_freedv, &d_stats);
       d_total_bit_errors = freedv_get_total_bit_errors(d_freedv);
 
-      consume_each(i);
-      return(n);
+      consume_each(in_offset);
+      return out_offset;
     }
 
     void put_next_rx_proto(void *callback_state,char *proto_bits) {
-- 
2.11.0


From 8921bbe2bc43942b9d233e4acbdb5a79dc05de3c Mon Sep 17 00:00:00 2001
From: "A. Maitland Bottoms" <bottoms@debian.org>
Date: Tue, 5 Jun 2018 15:28:30 -0400
Subject: [PATCH] codec2 0.8 block update

Update gr-vocoder codec2 and freedv blocks to support new modes
(700C, wb, 700D) available as of codec2 release 0.8 if found at
compile time.
---
 gr-vocoder/examples/grfreedv.grc                   | 40 +++++++++++++---
 gr-vocoder/grc/vocoder_codec2_decode_ps.xml        | 10 +++-
 gr-vocoder/grc/vocoder_codec2_encode_sp.xml        | 11 ++++-
 gr-vocoder/grc/vocoder_freedv_rx_ss.xml            | 33 +++++++++++++-
 gr-vocoder/grc/vocoder_freedv_tx_ss.xml            | 40 +++++++++++++++-
 gr-vocoder/include/gnuradio/vocoder/freedv_api.h   | 11 ++++-
 gr-vocoder/include/gnuradio/vocoder/freedv_rx_ss.h |  6 ++-
 gr-vocoder/include/gnuradio/vocoder/freedv_tx_ss.h |  5 +-
 gr-vocoder/lib/freedv_rx_ss_impl.cc                | 31 +++++++++++--
 gr-vocoder/lib/freedv_rx_ss_impl.h                 | 10 +++-
 gr-vocoder/lib/freedv_tx_ss_impl.cc                | 53 ++++++++++++++++++++--
 gr-vocoder/lib/freedv_tx_ss_impl.h                 | 17 +++++--
 gr-vocoder/swig/vocoder_swig.i                     |  6 ++-
 13 files changed, 241 insertions(+), 32 deletions(-)

diff --git a/gr-vocoder/examples/grfreedv.grc b/gr-vocoder/examples/grfreedv.grc
index 9f6b95d5bd..24c43f3879 100644
--- a/gr-vocoder/examples/grfreedv.grc
+++ b/gr-vocoder/examples/grfreedv.grc
@@ -1,12 +1,12 @@
 <?xml version='1.0' encoding='utf-8'?>
-<?grc format='1' created='3.7.9'?>
+<?grc format='1' created='3.7.13'?>
 <flow_graph>
   <timestamp>Wed Jun 29 19:22:27 2016</timestamp>
   <block>
     <key>options</key>
     <param>
       <key>author</key>
-      <value>A. MAitland Bottoms</value>
+      <value>A. Maitland Bottoms</value>
     </param>
     <param>
       <key>window_size</key>
@@ -73,6 +73,10 @@
       <value>True</value>
     </param>
     <param>
+      <key>sizing_mode</key>
+      <value>fixed</value>
+    </param>
+    <param>
       <key>thread_safe_setters</key>
       <value></value>
     </param>
@@ -80,6 +84,10 @@
       <key>title</key>
       <value>GNU Radio FreeDV</value>
     </param>
+    <param>
+      <key>placement</key>
+      <value>(0,0)</value>
+    </param>
   </block>
   <block>
     <key>variable</key>
@@ -120,7 +128,7 @@
     </param>
     <param>
       <key>_enabled</key>
-      <value>True</value>
+      <value>1</value>
     </param>
     <param>
       <key>_coordinate</key>
@@ -187,7 +195,7 @@
     </param>
     <param>
       <key>device_name</key>
-      <value></value>
+      <value>default</value>
     </param>
     <param>
       <key>_enabled</key>
@@ -195,7 +203,7 @@
     </param>
     <param>
       <key>_coordinate</key>
-      <value>(920, 228)</value>
+      <value>(888, 220)</value>
     </param>
     <param>
       <key>_rotation</key>
@@ -508,6 +516,10 @@
       <value>vocoder_freedv_rx_ss_0</value>
     </param>
     <param>
+      <key>interleave_frames</key>
+      <value>1</value>
+    </param>
+    <param>
       <key>maxoutbuf</key>
       <value>0</value>
     </param>
@@ -520,6 +532,10 @@
       <value>freedv_api.MODE_1600</value>
     </param>
     <param>
+      <key>squelch_enable</key>
+      <value>True</value>
+    </param>
+    <param>
       <key>squelch_thresh</key>
       <value>squelch</value>
     </param>
@@ -531,6 +547,10 @@
       <value></value>
     </param>
     <param>
+      <key>clip_val</key>
+      <value>False</value>
+    </param>
+    <param>
       <key>comment</key>
       <value></value>
     </param>
@@ -544,7 +564,7 @@
     </param>
     <param>
       <key>_coordinate</key>
-      <value>(424, 221)</value>
+      <value>(424, 196)</value>
     </param>
     <param>
       <key>_rotation</key>
@@ -555,6 +575,10 @@
       <value>vocoder_freedv_tx_ss_0</value>
     </param>
     <param>
+      <key>interleave_frames</key>
+      <value>1</value>
+    </param>
+    <param>
       <key>maxoutbuf</key>
       <value>0</value>
     </param>
@@ -570,6 +594,10 @@
       <key>txt_msg</key>
       <value>'GNU Radio'</value>
     </param>
+    <param>
+      <key>tx_bpf_val</key>
+      <value>True</value>
+    </param>
   </block>
   <connection>
     <source_block_id>audio_source_0</source_block_id>
diff --git a/gr-vocoder/grc/vocoder_codec2_decode_ps.xml b/gr-vocoder/grc/vocoder_codec2_decode_ps.xml
index 8448dc83df..2621f5638d 100644
--- a/gr-vocoder/grc/vocoder_codec2_decode_ps.xml
+++ b/gr-vocoder/grc/vocoder_codec2_decode_ps.xml
@@ -47,11 +47,19 @@
 			<name>700B bps</name>
 			<key>codec2.MODE_700B</key>
 		</option>
+		<option>
+			<name>700C bps</name>
+			<key>codec2.MODE_700C</key>
+		</option>
+		<option>
+			<name>Wideband</name>
+			<key>codec2.MODE_WB</key>
+		</option>
 	</param>
 	<sink>
 		<name>in</name>
 		<type>byte</type>
-		<vlen>{ 0: 64, 1: 48, 2: 64, 3: 56, 4: 52, 5: 48, 6: 28, 7: 28 }[$mode]</vlen>
+		<vlen>{ 0: 64, 1: 48, 2: 64, 3: 56, 4: 52, 5: 48, 6: 28, 7: 28, 8: 28, 9: 64 }[$mode]</vlen>
 	</sink>
 	<source>
 		<name>out</name>
diff --git a/gr-vocoder/grc/vocoder_codec2_encode_sp.xml b/gr-vocoder/grc/vocoder_codec2_encode_sp.xml
index f11ad443c6..1d5754aaa6 100644
--- a/gr-vocoder/grc/vocoder_codec2_encode_sp.xml
+++ b/gr-vocoder/grc/vocoder_codec2_encode_sp.xml
@@ -47,6 +47,14 @@
 			<name>700B bps</name>
 			<key>codec2.MODE_700B</key>
 		</option>
+		<option>
+			<name>700C bps</name>
+			<key>codec2.MODE_700C</key>
+		</option>
+		<option>
+			<name>Wideband</name>
+			<key>codec2.MODE_WB</key>
+		</option>
 	</param>
 	<sink>
 		<name>in</name>
@@ -55,7 +63,6 @@
 	<source>
 		<name>out</name>
 		<type>byte</type>
-		<vlen>{ 0: 64, 1: 48, 2: 64, 3: 56, 4: 52, 5: 48, 6: 28, 7: 28 }[$mode]</vlen>
+		<vlen>{ 0: 64, 1: 48, 2: 64, 3: 56, 4: 52, 5: 48, 6: 28, 7: 28, 8: 28, 9: 64 }[$mode]</vlen>
 	</source>
 </block>
-
diff --git a/gr-vocoder/grc/vocoder_freedv_rx_ss.xml b/gr-vocoder/grc/vocoder_freedv_rx_ss.xml
index 14e00a0979..01554a4711 100644
--- a/gr-vocoder/grc/vocoder_freedv_rx_ss.xml
+++ b/gr-vocoder/grc/vocoder_freedv_rx_ss.xml
@@ -9,7 +9,8 @@
   <key>vocoder_freedv_rx_ss</key>
   <import>from gnuradio import vocoder</import>
   <import>from gnuradio.vocoder import freedv_api</import>
-  <make>vocoder.freedv_rx_ss($mode,$squelch_thresh)</make>
+  <make>vocoder.freedv_rx_ss($mode,$squelch_thresh,$interleave_frames)</make>
+  <callback>set_squelch_en($squelch_enable)</callback>
   <callback>set_squelch_thresh($squelch_thresh)</callback>
   <param>
     <name>Operating Mode</name>
@@ -40,6 +41,20 @@
       <name>800XA</name>
       <key>freedv_api.MODE_800XA</key>
     </option>
+    <option>
+      <name>700C</name>
+      <key>freedv_api.MODE_700C</key>
+    </option>
+    <option>
+      <name>700D</name>
+      <key>freedv_api.MODE_700D</key>
+    </option>
+  </param>
+  <param>
+    <name>Interleave Frames</name>
+    <key>interleave_frames</key>
+    <value>1</value>
+    <type>int</type>
   </param>
   <param>
     <name>Squelch Threshold</name>
@@ -47,6 +62,12 @@
     <value>-100.0</value>
     <type>float</type>
   </param>
+  <param>
+    <name>Squelch Enable</name>
+    <key>squelch_enable</key>
+    <value>True</value>
+    <type>bool</type>
+  </param>
   <sink>
     <name>in</name>
     <type>short</type>
@@ -55,4 +76,14 @@
     <name>out</name>
     <type>short</type>
   </source>
+  <doc>
+Not all modes may be supported by the underlying codec2 library.
+
+interleave_frames is an integer between 1 and 32, and is only used in the 700D mode.
+(must be set the same on both transmitter and receiver)
+
+Squelch Enable defaults to On
+
+Squelch Threshold - cutoff level for receiver
+  </doc>
 </block>
diff --git a/gr-vocoder/grc/vocoder_freedv_tx_ss.xml b/gr-vocoder/grc/vocoder_freedv_tx_ss.xml
index 54a49b730f..eb6151da03 100644
--- a/gr-vocoder/grc/vocoder_freedv_tx_ss.xml
+++ b/gr-vocoder/grc/vocoder_freedv_tx_ss.xml
@@ -9,7 +9,9 @@
   <key>vocoder_freedv_tx_ss</key>
   <import>from gnuradio import vocoder</import>
   <import>from gnuradio.vocoder import freedv_api</import>
-  <make>vocoder.freedv_tx_ss($mode,$txt_msg)</make>
+  <make>vocoder.freedv_tx_ss($mode,$txt_msg,$interleave_frames)</make>
+  <callback>set_clip($clip_val)</callback>
+  <callback>set_tx_bpf($tx_bpf_val)</callback>
   <param>
     <name>Operating Mode</name>
     <key>mode</key>
@@ -39,6 +41,14 @@
       <name>800XA</name>
       <key>freedv_api.MODE_800XA</key>
     </option>
+    <option>
+      <name>700C</name>
+      <key>freedv_api.MODE_700C</key>
+    </option>
+    <option>
+      <name>700D</name>
+      <key>freedv_api.MODE_700D</key>
+    </option>
   </param>
   <param>
     <name>Text Message</name>
@@ -46,6 +56,24 @@
     <value>'GNU Radio'</value>
     <type>string</type>
   </param>
+  <param>
+    <name>Interleave Frames</name>
+    <key>interleave_frames</key>
+    <value>1</value>
+    <type>int</type>
+  </param>
+  <param>
+    <name>Clip</name>
+    <key>clip_val</key>
+    <value>False</value>
+    <type>bool</type>
+  </param>
+  <param>
+    <name>Tx BPF</name>
+    <key>tx_bpf_val</key>
+    <value>True</value>
+    <type>bool</type>
+  </param>
   <sink>
     <name>in</name>
     <type>short</type>
@@ -54,4 +82,14 @@
     <name>out</name>
     <type>short</type>
   </source>
+  <doc>
+Not all modes may be supported by the underlying codec2 library.
+
+interleave_frames is an integer between 1 and 32, and is only used in the 700D mode.
+(must be set the same on both transmitter and receiver)
+
+Clip reduces the Peak/Average Power Ratio from 12dB to 8dB by clipping.
+
+Tx BPF: enable a bandpass filter
+  </doc>
 </block>
diff --git a/gr-vocoder/include/gnuradio/vocoder/freedv_api.h b/gr-vocoder/include/gnuradio/vocoder/freedv_api.h
index 230da4e108..f5d72835a5 100644
--- a/gr-vocoder/include/gnuradio/vocoder/freedv_api.h
+++ b/gr-vocoder/include/gnuradio/vocoder/freedv_api.h
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2016 Free Software Foundation, Inc.
+ * Copyright 2016-2018 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -56,6 +56,15 @@ namespace gr {
 #ifdef FREEDV_MODE_800XA
         MODE_800XA = FREEDV_MODE_800XA,
 #endif
+#ifdef FREEDV_MODE_700C
+        MODE_700C = FREEDV_MODE_700C,
+#endif
+#ifdef FREEDV_MODE_700D
+        MODE_700D = FREEDV_MODE_700D,
+	SYNC_UNSYNC = FREEDV_SYNC_UNSYNC,
+	SYNC_AUTO = FREEDV_SYNC_AUTO,
+	SYNC_MANUAL = FREEDV_SYNC_MANUAL,
+#endif
       };
 
     private:
diff --git a/gr-vocoder/include/gnuradio/vocoder/freedv_rx_ss.h b/gr-vocoder/include/gnuradio/vocoder/freedv_rx_ss.h
index a6568dee7d..2a5f3b77a4 100644
--- a/gr-vocoder/include/gnuradio/vocoder/freedv_rx_ss.h
+++ b/gr-vocoder/include/gnuradio/vocoder/freedv_rx_ss.h
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2016 Free Software Foundation, Inc.
+ * Copyright 2016-2018 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -50,11 +50,13 @@ namespace gr {
        *
        * \param mode Operating Mode designation
        * \param squelch_thresh FreeDV modem squelch threshold value
+       * \param interleave_frames FreeDV 700D mode number of frames to average error
        */
-      static sptr make(int mode=freedv_api::MODE_1600, float squelch_thresh=-100.0);
+      static sptr make(int mode=freedv_api::MODE_1600, float squelch_thresh=-100.0, int interleave_frames=1);
 
       virtual void set_squelch_thresh(float squelch_thresh) = 0;
       virtual float squelch_thresh() = 0;
+      virtual void set_squelch_en(bool squelch_enable) = 0;
     };
 
   } /* namespace vocoder */
diff --git a/gr-vocoder/include/gnuradio/vocoder/freedv_tx_ss.h b/gr-vocoder/include/gnuradio/vocoder/freedv_tx_ss.h
index 0e80d78bfb..20fd31f91c 100644
--- a/gr-vocoder/include/gnuradio/vocoder/freedv_tx_ss.h
+++ b/gr-vocoder/include/gnuradio/vocoder/freedv_tx_ss.h
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2016 Free Software Foundation, Inc.
+ * Copyright 2016-2018 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -49,8 +49,9 @@ namespace gr {
        *
        * \param mode Operating Mode designation
        * \param msg_txt Low Rate message text (callsign, location)
+       * \param interleave_frames FreeDV 700D mode number of frames to average error
        */
-      static sptr make(int mode=freedv_api::MODE_1600,const std::string msg_txt="GNU Radio");
+      static sptr make(int mode=freedv_api::MODE_1600,const std::string msg_txt="GNU Radio",int interleave_frames=1);
     };
 
   } /* namespace vocoder */
diff --git a/gr-vocoder/lib/freedv_rx_ss_impl.cc b/gr-vocoder/lib/freedv_rx_ss_impl.cc
index 748a5c10aa..4af0410cfc 100644
--- a/gr-vocoder/lib/freedv_rx_ss_impl.cc
+++ b/gr-vocoder/lib/freedv_rx_ss_impl.cc
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2016 Free Software Foundation, Inc.
+ * Copyright 2016-2018 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -47,20 +47,31 @@ namespace gr {
   namespace vocoder {
 
     freedv_rx_ss::sptr
-    freedv_rx_ss::make(int mode, float squelch_thresh)
+    freedv_rx_ss::make(int mode, float squelch_thresh, int interleave_frames)
     {
       return gnuradio::get_initial_sptr
-        (new freedv_rx_ss_impl(mode, squelch_thresh));
+        (new freedv_rx_ss_impl(mode, squelch_thresh, interleave_frames));
     }
 
-    freedv_rx_ss_impl::freedv_rx_ss_impl (int mode, float squelch_thresh)
+    freedv_rx_ss_impl::freedv_rx_ss_impl (int mode, float squelch_thresh, int interleave_frames)
       : gr::block("vocoder_freedv_rx_ss",
               io_signature::make(1, 1, sizeof(short)),
               io_signature::make(1, 1, sizeof(short))),
-        d_mode(mode), d_squelch_thresh(squelch_thresh)
+        d_mode(mode), d_squelch_thresh(squelch_thresh), d_interleave_frames(interleave_frames)
     {
+#ifdef FREEDV_MODE_700D
+      if (mode == FREEDV_MODE_700D) {
+      d_adv.interleave_frames = interleave_frames;
+      if((d_freedv = freedv_open_advanced(mode, &d_adv)) ==NULL)
+	throw std::runtime_error("freedv_tx_ss_impl: freedv_open_advanced failed");
+      } else {
+	if((d_freedv = freedv_open(mode)) == NULL)
+	  throw std::runtime_error("freedv_tx_ss_impl: freedv_open failed");
+      }
+#else
       if((d_freedv = freedv_open(mode)) == NULL)
         throw std::runtime_error("freedv_rx_ss_impl: freedv_open failed");
+#endif
       freedv_set_snr_squelch_thresh(d_freedv, d_squelch_thresh);
       freedv_set_squelch_en(d_freedv, 0);
       freedv_set_callback_txt(d_freedv, put_next_rx_char, NULL, (void *) &d_cb_state);
@@ -138,6 +149,16 @@ namespace gr {
       freedv_set_snr_squelch_thresh(d_freedv, d_squelch_thresh);
     }
 
+    void freedv_rx_ss_impl::set_squelch_en(bool squelch_enabled)
+    {
+      gr::thread::scoped_lock l(d_setlock);
+      d_squelch_en = squelch_enabled;
+      if (squelch_enabled)
+	freedv_set_squelch_en(d_freedv, 1);
+      else
+	freedv_set_squelch_en(d_freedv, 0);
+    }
+
     float freedv_rx_ss_impl::squelch_thresh() {
       return(d_squelch_thresh);
     }
diff --git a/gr-vocoder/lib/freedv_rx_ss_impl.h b/gr-vocoder/lib/freedv_rx_ss_impl.h
index acc49d9d82..9da12e53ea 100644
--- a/gr-vocoder/lib/freedv_rx_ss_impl.h
+++ b/gr-vocoder/lib/freedv_rx_ss_impl.h
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2016 Free Software Foundation, Inc.
+ * Copyright 2016-2018 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -53,18 +53,24 @@ namespace gr {
       int d_total_bit_errors;
       float d_snr_est;
       float d_squelch_thresh;
+      bool d_squelch_en;
       int d_speech_samples;
       int d_max_modem_samples;
       float d_clock_offset;
       int d_use_codecrx;
+      int d_interleave_frames;
+#ifdef FREEDV_MODE_700D
+      struct freedv_advanced d_adv;
+#endif
       struct CODEC2 *d_c2 = NULL;
 
     public:
-      freedv_rx_ss_impl(int mode, float squelch_thresh);
+      freedv_rx_ss_impl(int mode, float squelch_thresh, int interleave_frames);
       ~freedv_rx_ss_impl();
 
       void set_squelch_thresh(float squelch_thresh);
       float squelch_thresh();
+      void set_squelch_en(bool squelch_enabled);
 
       // Where all the action really happens
       void forecast(int noutput_items, gr_vector_int &ninput_items_required);
diff --git a/gr-vocoder/lib/freedv_tx_ss_impl.cc b/gr-vocoder/lib/freedv_tx_ss_impl.cc
index a375510050..ab28183ed0 100644
--- a/gr-vocoder/lib/freedv_tx_ss_impl.cc
+++ b/gr-vocoder/lib/freedv_tx_ss_impl.cc
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2016 Free Software Foundation, Inc.
+ * Copyright 2016-2018 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -54,20 +54,31 @@ namespace gr {
   namespace vocoder {
 
     freedv_tx_ss::sptr
-    freedv_tx_ss::make(int mode, const std::string msg_txt)
+    freedv_tx_ss::make(int mode, const std::string msg_txt, int interleave_frames)
     {
       return gnuradio::get_initial_sptr
-        (new freedv_tx_ss_impl(mode, msg_txt));
+        (new freedv_tx_ss_impl(mode, msg_txt, interleave_frames));
     }
 
-    freedv_tx_ss_impl::freedv_tx_ss_impl(int mode, const std::string msg_txt)
+    freedv_tx_ss_impl::freedv_tx_ss_impl(int mode, const std::string msg_txt, int interleave_frames)
       : sync_block("vocoder_freedv_tx_ss",
                    io_signature::make(1, 1, sizeof(short)),
                    io_signature::make(1, 1, sizeof(short))),
-        d_mode(mode), d_msg_text(msg_txt)
+        d_mode(mode), d_msg_text(msg_txt), d_interleave_frames(interleave_frames)
     {
+#ifdef FREEDV_MODE_700D
+      if (mode == FREEDV_MODE_700D) {
+      d_adv.interleave_frames = interleave_frames;
+      if((d_freedv = freedv_open_advanced(mode, &d_adv)) ==NULL)
+	throw std::runtime_error("freedv_tx_ss_impl: freedv_open_advanced failed");
+      } else {
+	if((d_freedv = freedv_open(mode)) == NULL)
+	  throw std::runtime_error("freedv_tx_ss_impl: freedv_open failed");
+      }
+#else
       if((d_freedv = freedv_open(mode)) == NULL)
         throw std::runtime_error("freedv_tx_ss_impl: freedv_open failed");
+#endif
       snprintf(d_cb_state.tx_str,79,"%s",d_msg_text.c_str());
       d_cb_state.ptx_str = d_cb_state.tx_str;
       freedv_set_callback_txt(d_freedv, NULL, get_next_tx_char, (void *) &d_cb_state);
@@ -80,6 +91,38 @@ namespace gr {
       freedv_close(d_freedv);
     }
 
+    void freedv_tx_ss_impl::set_clip(int val)
+    {
+      d_clip = val;
+#if defined(FREEDV_MODE_700C) || defined(FREEDV_MODE_700D)
+      freedv_set_clip(d_freedv, d_clip);
+#endif
+    }
+
+    void freedv_tx_ss_impl::set_clip(bool val)
+    {
+      if (val)
+	freedv_tx_ss_impl::set_clip(1);
+      else
+	freedv_tx_ss_impl::set_clip(0);
+    }
+
+    void freedv_tx_ss_impl::set_tx_bpf(int val)
+    {
+      d_tx_bpf = val;
+#ifdef FREEDV_MODE_700D
+      freedv_set_tx_bpf(d_freedv, d_tx_bpf);
+#endif
+    }
+
+    void freedv_tx_ss_impl::set_tx_bpf(bool val)
+    {
+      if (val)
+	freedv_tx_ss_impl::set_tx_bpf(1);
+      else
+	freedv_tx_ss_impl::set_tx_bpf(0);
+    }
+
     int
     freedv_tx_ss_impl::work(int noutput_items,
                             gr_vector_const_void_star &input_items,
diff --git a/gr-vocoder/lib/freedv_tx_ss_impl.h b/gr-vocoder/lib/freedv_tx_ss_impl.h
index a023b67f5b..9304419034 100644
--- a/gr-vocoder/lib/freedv_tx_ss_impl.h
+++ b/gr-vocoder/lib/freedv_tx_ss_impl.h
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2016 Free Software Foundation, Inc.
+ * Copyright 2016-2018 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -48,18 +48,29 @@ namespace gr {
       struct freedv_tx_callback_state d_cb_state;
       struct freedv *d_freedv;
       int d_mode;
+      std::string d_msg_text;
+      int d_interleave_frames;
       float d_squelch_thresh;
       int d_speech_samples;
       int d_nom_modem_samples;
       int d_use_codectx;
       int d_use_datatx;
-      std::string d_msg_text;
+      int d_clip;
+      int d_tx_bpf;
+#ifdef FREEDV_MODE_700D
+      struct freedv_advanced d_adv;
+#endif
       struct CODEC2 *d_c2;
 
     public:
-      freedv_tx_ss_impl(int mode, const std::string txt_msg);
+      freedv_tx_ss_impl(int mode, const std::string txt_msg, int interleave_frames);
       ~freedv_tx_ss_impl();
 
+      void set_clip(bool val);
+      void set_clip(int val);
+      void set_tx_bpf(bool val);
+      void set_tx_bpf(int val);
+
       // Where all the action really happens
       int work(int noutput_items,
                gr_vector_const_void_star &input_items,
diff --git a/gr-vocoder/swig/vocoder_swig.i b/gr-vocoder/swig/vocoder_swig.i
index 1bf451539d..bad26bfddb 100644
--- a/gr-vocoder/swig/vocoder_swig.i
+++ b/gr-vocoder/swig/vocoder_swig.i
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2011,2013,2016 Free Software Foundation, Inc.
+ * Copyright 2011,2013,2016,2018 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -93,8 +93,12 @@ GR_SWIG_BLOCK_MAGIC2(vocoder, codec2_encode_sp);
 #include "gnuradio/vocoder/freedv_tx_ss.h"
 %}
 
+#ifdef FREEDV_MODE_700D
+#else
 %ignore freedv_set_smooth_symbols;
 %ignore freedv_set_clip;
+#endif
+
 %include <codec2/freedv_api.h>
 %include "gnuradio/vocoder/freedv_api.h"
 %include "gnuradio/vocoder/freedv_rx_ss.h"
-- 
2.11.0

